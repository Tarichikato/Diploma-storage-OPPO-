{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\francesca\\\\Desktop\\\\Code SmartContract\\\\Diploma_Storage_INFO\\\\Diploma_Storage_INFO\\\\src\\\\components\\\\CheckDegrees.js\";\nimport React, { Component } from 'react';\nimport { createContract } from './../ethereum/DiplomaStorageContract';\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\nimport { web3 } from './../ethereum/web3';\nimport NavBar from './../assets/NavBar';\nimport { PopupCheckDegree } from './../assets/PopupCheckDegree';\nexport class CheckDegrees extends Component {\n  async componentDidMount() {\n    await this.getDiplomas(this.getDiplomaStorageAddress());\n  }\n\n  getDiplomaStorageAddress() {\n    return this.props.match.params.address;\n  }\n\n  async getDiplomas(address) {\n    const contract = createContract(address);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(accounts);\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const diplomaCount = await contract.methods.diplomaCount().call();\n    this.setState({\n      diplomaCount\n    });\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount\n    });\n    const degreeCount = await contract.methods.degreeCount().call();\n    this.setState({\n      degreeCount\n    });\n    const schoolCount = await contract.methods.schoolCount().call();\n    this.setState([schoolCount]);\n\n    for (var i = 1; i <= studentCount; i++) {\n      const student = await contract.methods.students(i).call();\n      this.setState({\n        students: [...this.state.students, student]\n      });\n    }\n\n    for (var j = 1; j <= diplomaCount; j++) {\n      const diploma = await contract.methods.diplomas(j).call();\n      this.setState({\n        diplomas: [...this.state.diplomas, diploma]\n      });\n    }\n\n    for (var k = 1; k <= schoolCount; k++) {\n      const school = await contract.methods.schools(k).call();\n      this.setState({\n        schools: [...this.state.schools, school]\n      });\n    }\n\n    for (var l = 1; l <= degreeCount; l++) {\n      const degree = await contract.methods.degrees(l).call();\n      this.setState({\n        degrees: [...this.state.degrees, degree]\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      diplomas: {\n        idStudent: 0,\n        idDegree: 0\n      },\n      students: {\n        name: 'N/A',\n        idStudent: 0,\n        INE: 0,\n        fisrtName: 'N/A',\n        lastName: 'N/A',\n        birth: 0\n      },\n      degrees: {\n        idDegree: 0,\n        idSchool: 0,\n        year: 0,\n        name: 'N/A',\n        schoolName: 'N/A'\n      },\n      schools: {\n        schoolAddress: 'N/A',\n        idSchool: 0,\n        schoolName: 'N/A'\n      },\n      diplomaResult: 'N/A'\n    };\n    this.state = {\n      account: '',\n      diplomaCount: 0,\n      studentCount: 0,\n      degreeCount: 0,\n      schoolCount: 0,\n      students: [],\n      schools: [],\n      degrees: [],\n      diplomas: [],\n      diplomaResult: 'N/A',\n      ModalShow: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async checkDegree(year, name, schoolName) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const degreeResult = await contract.methods.checkDegree(year, name, schoolName).call();\n    this.setState({\n      degreeResult\n    });\n    console.log('Degree Result: ', degreeResult);\n  }\n\n  onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    console.log(name, value, this.state);\n    this.setState({\n      [name]: value\n    });\n    console.log(name, value, this.state);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const degreeResult = this.checkDegree(this.state.year, this.state.name, this.state.schoolName);\n    this.setState(degreeResult);\n    const degreeName = this.state.name; //this.setState(degreeName)\n  }\n\n  render() {\n    let ModalClose = () => this.setState({\n      ModalShow: false\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5 text-center center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, \"Check Degree\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Rentrez les informations du degree dont vous voulez v\\xE9rifier l existence:  \")))))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"Degree Year\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the Degree Year\",\n      name: \"year\",\n      type: \"number\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, \"Degree Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the Degree Name \",\n      name: \"name\",\n      type: \"text\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, \"School Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the School Name\",\n      name: \"schoolName\",\n      type: \"text\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(ButtonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        ModalShow: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, \"Check Degree\"), /*#__PURE__*/React.createElement(PopupCheckDegree, {\n      show: this.state.ModalShow,\n      onHide: ModalClose,\n      onSubmit: this.onSubmit,\n      degreeResult: this.state.degreeResult,\n      degree: [this.state.degreeName],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onSubmitBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      onClick: this.onSubmitReload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \"Refresh\"))))));\n  }\n\n  onSubmitBack(event) {\n    event.preventDefault();\n    window.history.back();\n  }\n\n  onSubmitReload(event) {\n    event.preventDefault();\n    window.location.reload();\n  }\n\n}\nexport default CheckDegrees;","map":{"version":3,"sources":["C:/Users/francesca/Desktop/Code SmartContract/Diploma_Storage_INFO/Diploma_Storage_INFO/src/components/CheckDegrees.js"],"names":["React","Component","createContract","Button","ButtonGroup","Form","Spinner","Modal","ButtonToolbar","web3","NavBar","PopupCheckDegree","CheckDegrees","componentDidMount","getDiplomas","getDiplomaStorageAddress","props","match","params","address","contract","accounts","eth","getAccounts","setState","account","console","log","diplomaCount","methods","call","studentCount","degreeCount","schoolCount","i","student","students","state","j","diploma","diplomas","k","school","schools","l","degree","degrees","constructor","idStudent","idDegree","name","INE","fisrtName","lastName","birth","idSchool","year","schoolName","schoolAddress","diplomaResult","ModalShow","onChange","bind","onSubmit","checkDegree","degreeResult","event","target","value","preventDefault","degreeName","render","ModalClose","onSubmitBack","onSubmitReload","window","history","back","location","reload"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\r\nimport { createContract } from './../ethereum/DiplomaStorageContract'\r\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\r\nimport { web3 } from './../ethereum/web3';\r\nimport NavBar from './../assets/NavBar';\r\nimport { PopupCheckDegree} from './../assets/PopupCheckDegree';\r\n\r\n\r\n\r\n\r\nexport class CheckDegrees extends Component {\r\n  state = {\r\n      diplomas: {\r\n          idStudent: 0,\r\n          idDegree: 0,\r\n      },\r\n\r\n      students: {\r\n          name:'N/A',\r\n          idStudent: 0,\r\n          INE: 0,\r\n          fisrtName: 'N/A',\r\n          lastName: 'N/A',\r\n          birth: 0,\r\n      },\r\n\r\n      degrees: {\r\n          idDegree: 0,\r\n          idSchool: 0,\r\n          year: 0,\r\n          name: 'N/A',\r\n          schoolName: 'N/A',\r\n      },\r\n\r\n      schools: {\r\n          schoolAddress: 'N/A',\r\n          idSchool: 0,\r\n          schoolName: 'N/A',\r\n      },\r\n\r\n      diplomaResult: 'N/A',\r\n\r\n  }\r\n\r\n\r\nasync componentDidMount () {\r\n  await this.getDiplomas(this.getDiplomaStorageAddress()\r\n  )\r\n}\r\n\r\ngetDiplomaStorageAddress () {\r\n  return this.props.match.params.address\r\n}\r\n\r\nasync getDiplomas(address) {\r\n  const contract = createContract(address)\r\n  const accounts = await web3.eth.getAccounts()\r\n  this.setState({ account: accounts[0] })\r\n  console.log(accounts)\r\n\r\n  this.setState({ contract })\r\n  console.log(contract)\r\n\r\n  const diplomaCount = await contract.methods.diplomaCount().call()\r\n  this.setState({diplomaCount})\r\n\r\n  const studentCount = await contract.methods.studentCount().call()\r\n  this.setState({studentCount})\r\n\r\n  const degreeCount = await contract.methods.degreeCount().call()\r\n  this.setState({degreeCount})\r\n\r\n  const schoolCount = await contract.methods.schoolCount().call()\r\n  this.setState([schoolCount])\r\n\r\n  for (var i = 1; i <= studentCount; i++) {\r\n      const student = await contract.methods.students(i).call()\r\n      this.setState({\r\n        students: [...this.state.students, student]\r\n      })\r\n    }\r\n\r\n\r\n  for (var j = 1; j <= diplomaCount; j++) {\r\n      const diploma = await contract.methods.diplomas(j).call()\r\n      this.setState({\r\n        diplomas: [...this.state.diplomas, diploma]\r\n      })\r\n    }\r\n\r\n\r\n    for (var k = 1; k <= schoolCount; k++) {\r\n      const school = await contract.methods.schools(k).call()\r\n      this.setState({\r\n        schools: [...this.state.schools, school]\r\n      })\r\n    }\r\n\r\n    for (var l = 1; l <= degreeCount; l++) {\r\n      const degree = await contract.methods.degrees(l).call()\r\n      this.setState({\r\n        degrees: [...this.state.degrees, degree]\r\n      })\r\n    }\r\n}\r\n\r\nconstructor(props) {\r\n  super(props)\r\n  this.state = {\r\n    account:'',\r\n    diplomaCount: 0,\r\n    studentCount: 0,\r\n    degreeCount: 0,\r\n    schoolCount:0,\r\n    students: [],\r\n    schools: [],\r\n    degrees: [],\r\n    diplomas: [],\r\n    diplomaResult: 'N/A',\r\n    ModalShow: false,\r\n  }\r\n  this.onChange = this.onChange.bind(this);\r\n  this.onSubmit = this.onSubmit.bind(this);\r\n}\r\n\r\nasync checkDegree(year, name, schoolName) {\r\n    const contract = createContract(this.getDiplomaStorageAddress())\r\n\r\n    this.setState({ contract })\r\n    console.log(contract)\r\n\r\n\r\n    const degreeResult = await contract.methods.checkDegree( year, name, schoolName).call()\r\n    this.setState({degreeResult})\r\n    console.log('Degree Result: ', degreeResult)\r\n\r\n}\r\n\r\n\r\nonChange(event) {\r\n\r\n    const target = event.target;\r\n    const value =  target.value;\r\n    const name = target.name;\r\n    console.log(name,value,this.state)\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    console.log(name,value,this.state)\r\n}\r\n\r\n\r\nonSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const degreeResult =  this.checkDegree(this.state.year, this.state.name, this.state.schoolName)\r\n    this.setState(degreeResult)\r\nconst degreeName = this.state.name\r\n//this.setState(degreeName)\r\n}\r\n\r\nrender () {\r\n    let ModalClose =() => this.setState({ModalShow:false})\r\n\r\n    return (\r\n\r\n    <div>\r\n        <div>\r\n            <NavBar/>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row mt-5 text-center center\">\r\n            <div className=\"col-lg-10 mb-4 grid-margin\">\r\n              <div className=\"card h-100\">\r\n                  <h4 className=\"card-header\">Check Degree</h4>\r\n                  <div className=\"card-body\">\r\n                    <p className=\"card-text\">Rentrez les informations du degree dont vous voulez vérifier l existence:  </p>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n        <Form>\r\n\r\n            <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>Degree Year</Form.Label>\r\n                <Form.Control\r\n                    placeholder= 'Enter the Degree Year'\r\n                    name=\"year\"\r\n                    type=\"number\"\r\n                    onChange={this.onChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>Degree Name</Form.Label>\r\n                <Form.Control\r\n                    placeholder= 'Enter the Degree Name '\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    onChange={this.onChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>School Name</Form.Label>\r\n                <Form.Control\r\n                    placeholder= 'Enter the School Name'\r\n                    name=\"schoolName\"\r\n                    type=\"text\"\r\n                    onChange={this.onChange} />\r\n            </Form.Group>\r\n\r\n        </Form>\r\n\r\n\r\n        {/* AJOUTER UN POP UP QUI DONNE LE RESULTAT DE CHECK Degree */}\r\n        <ButtonToolbar>\r\n        <Button variant=\"primary\"\r\n          onClick={() => this.setState({ModalShow: true})}\r\n          >Check Degree\r\n        </Button>\r\n\r\n        <PopupCheckDegree\r\n          show={this.state.ModalShow}\r\n          onHide={ModalClose}\r\n          onSubmit={this.onSubmit}\r\n          degreeResult={this.state.degreeResult}\r\n          degree = {[this.state.degreeName]}\r\n\r\n\r\n        />\r\n      </ButtonToolbar>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-lg-4 mb-4 grid-margin\">\r\n          <ButtonGroup size=\"lg\" >\r\n                <Button variant=\"primary\"\r\n                    onClick={this.onSubmitBack}\r\n                    >Back\r\n                </Button>\r\n                <Button variant=\"light\"\r\n                    onClick={this.onSubmitReload}\r\n                    >Refresh\r\n                </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      </div>\r\n\r\n        );\r\n    }\r\n\r\n    onSubmitBack(event) {\r\n        event.preventDefault();\r\n        window.history.back()\r\n    }\r\n\r\n    onSubmitReload(event) {\r\n        event.preventDefault();\r\n        window.location.reload()\r\n    }\r\n}\r\n\r\nexport default CheckDegrees;\r\n"]},"metadata":{},"sourceType":"module"}