{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CreateStudent.js\";\nimport React, { Component } from 'react';\nimport { createContract } from './../ethereum/DiplomaStorageContract';\nimport { Table } from 'semantic-ui-react';\nimport Web3 from 'web3';\nexport class CreateStudent extends Component {\n  async componentDidMount() {\n    this.loadBcData();\n    const currentStudents = await this.getStudents(this.getDiplomaStorageAddress());\n    this.setState({\n      students: currentStudents\n    });\n  }\n\n  async loadBcData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network\", network);\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"account\", accounts[0]);\n    this.setState({\n      account: accounts[0]\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: {\n        name: 'N/A',\n        idStudent: 0,\n        INE: 0,\n        fisrtName: 'N/A',\n        lastName: 'N/A',\n        birth: 0\n      }\n    };\n    this.state = {\n      account: ''\n    };\n  }\n\n  getDiplomaStorageAddress() {\n    return this.props.match.params.address;\n  }\n\n  async getStudents(address) {\n    const contract = createContract('0x798E41bBadA350Fb878EBDef9A3055cE4d9d2c23');\n    this.setState({\n      contract\n    });\n    console.log(this.getDiplomaStorageAddress);\n    console.log(contract);\n    const student = await contract.methods.students(1).call().then(console.log);\n    this.setState({\n      student\n    });\n    const idStudent = contract.methods.students(1).call();\n    this.setState({\n      idStudent\n    });\n    const INE = await contract.methods.students(1).call();\n    this.setState({\n      INE\n    });\n    const firstName = await contract.methods.students(1).call();\n    this.setState({\n      firstName\n    });\n    const lastName = await contract.methods.students(1).call();\n    this.setState({\n      lastName\n    });\n    const birth = await contract.methods.students(1).call();\n    this.setState({\n      birth\n    });\n    /* const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount}) */\n\n    /* for (var i = 1; i<=studentCount; i++) {\n        const student = await contract.methods.students(i).call().then(console.log)\n        this.setState({student})\n         const idStudent = await contract.methods.idStudent(0).call()\n        this.setState({idStudent})\n        const INE = await contract.methods.student(1).call()\n        const firstName = await contract.methods.student(2).call()\n        const lastName = await contract.methods.student(3).call()\n        const birth = await contract.methods.student(4).call()\n    this.setState({\n        students:[...this.state.students, student]\n    }) */\n\n    return {\n      idStudent: idStudent,\n      INE: INE,\n      firstName: firstName,\n      lastName: lastName,\n      birth: birth\n    };\n  }\n\n  /* createStudent(INE, firstName, lastName, birth) {\n    this.setState({ loading: true })\n    this.state.contract.methods.createStudent(INE, firstName, lastName, birth).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  } */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Account : [this.state.account]\"));\n  }\n\n}\nexport default CreateStudent;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CreateStudent.js"],"names":["React","Component","createContract","Table","Web3","CreateStudent","componentDidMount","loadBcData","currentStudents","getStudents","getDiplomaStorageAddress","setState","students","web3","givenProvider","network","eth","net","getNetworkType","console","log","accounts","getAccounts","account","constructor","props","state","name","idStudent","INE","fisrtName","lastName","birth","match","params","address","contract","student","methods","call","then","firstName","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAIA,OAAO,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAc3C,QAAMK,iBAAN,GAA2B;AACzB,SAAKC,UAAL;AACA,UAAMC,eAAe,GAAG,MAAM,KAAKC,WAAL,CAAiB,KAAKC,wBAAL,EAAjB,CAA9B;AAEA,SAAKC,QAAL,CAAc;AACVC,MAAAA,QAAQ,EAAEJ;AADA,KAAd;AAGD;;AAED,QAAMD,UAAN,GAAkB;AAChB,UAAMM,IAAI,GAAG,IAAIT,IAAJ,CAASA,IAAI,CAACU,aAAL,IAAsB,uBAA/B,CAAb;AACA,UAAMC,OAAO,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,GAAT,CAAaC,cAAb,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBL,OAAtB;AACA,UAAMM,QAAQ,GAAG,MAAMR,IAAI,CAACG,GAAL,CAASM,WAAT,EAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,QAAQ,CAAC,CAAD,CAA/B;AACA,SAAKV,QAAL,CAAc;AAACY,MAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAlB,KAAd;AACD;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SA9BhBC,KA8BgB,GA9BR;AACJd,MAAAA,QAAQ,EAAE;AACNe,QAAAA,IAAI,EAAC,KADC;AAENC,QAAAA,SAAS,EAAE,CAFL;AAGNC,QAAAA,GAAG,EAAE,CAHC;AAINC,QAAAA,SAAS,EAAE,KAJL;AAKNC,QAAAA,QAAQ,EAAE,KALJ;AAMNC,QAAAA,KAAK,EAAE;AAND;AADN,KA8BQ;AAEhB,SAAKN,KAAL,GAAa;AAACH,MAAAA,OAAO,EAAG;AAAX,KAAb;AAED;;AAGDb,EAAAA,wBAAwB,GAAI;AAC1B,WAAO,KAAKe,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,OAA/B;AACD;;AAED,QAAM1B,WAAN,CAAkB0B,OAAlB,EAA2B;AACzB,UAAMC,QAAQ,GAAGlC,cAAc,CAAC,4CAAD,CAA/B;AACA,SAAKS,QAAL,CAAc;AAAEyB,MAAAA;AAAF,KAAd;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,wBAAjB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AAEA,UAAMC,OAAO,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiB1B,QAAjB,CAA0B,CAA1B,EAA6B2B,IAA7B,GAAoCC,IAApC,CAAyCrB,OAAO,CAACC,GAAjD,CAAtB;AACA,SAAKT,QAAL,CAAc;AAAC0B,MAAAA;AAAD,KAAd;AAEA,UAAMT,SAAS,GAAIQ,QAAQ,CAACE,OAAT,CAAiB1B,QAAjB,CAA0B,CAA1B,EAA6B2B,IAA7B,EAAnB;AACA,SAAK5B,QAAL,CAAc;AAACiB,MAAAA;AAAD,KAAd;AACA,UAAMC,GAAG,GAAG,MAAMO,QAAQ,CAACE,OAAT,CAAiB1B,QAAjB,CAA0B,CAA1B,EAA6B2B,IAA7B,EAAlB;AACA,SAAK5B,QAAL,CAAc;AAACkB,MAAAA;AAAD,KAAd;AACA,UAAMY,SAAS,GAAG,MAAML,QAAQ,CAACE,OAAT,CAAiB1B,QAAjB,CAA0B,CAA1B,EAA6B2B,IAA7B,EAAxB;AACA,SAAK5B,QAAL,CAAc;AAAC8B,MAAAA;AAAD,KAAd;AACA,UAAMV,QAAQ,GAAG,MAAMK,QAAQ,CAACE,OAAT,CAAiB1B,QAAjB,CAA0B,CAA1B,EAA6B2B,IAA7B,EAAvB;AACA,SAAK5B,QAAL,CAAc;AAACoB,MAAAA;AAAD,KAAd;AACA,UAAMC,KAAK,GAAG,MAAMI,QAAQ,CAACE,OAAT,CAAiB1B,QAAjB,CAA0B,CAA1B,EAA6B2B,IAA7B,EAApB;AACA,SAAK5B,QAAL,CAAc;AAACqB,MAAAA;AAAD,KAAd;AAEA;;;AAGA;;;;;;;;;;;;;AAaA,WAAO;AACHJ,MAAAA,SAAS,EAAEA,SADR;AAEHC,MAAAA,GAAG,EAAEA,GAFF;AAGHY,MAAAA,SAAS,EAAEA,SAHR;AAIHV,MAAAA,QAAQ,EAAEA,QAJP;AAKHC,MAAAA,KAAK,EAAEA;AALJ,KAAP;AAOH;;AAIC;;;;;;;AAQAU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,CADF;AAMD;;AAzG0C;AA4G7C,eAAerC,aAAf","sourcesContent":["import React, { Component }  from 'react'\nimport { createContract } from './../ethereum/DiplomaStorageContract'\nimport { Table } from 'semantic-ui-react'\nimport Web3 from 'web3'\n\n\n\nexport class CreateStudent extends Component {\n\n    state = {\n        students: {\n            name:'N/A',\n            idStudent: 0,\n            INE: 0,\n            fisrtName: 'N/A',\n            lastName: 'N/A',\n            birth: 0,\n        }\n\n    }\n\n  async componentDidMount () {\n    this.loadBcData()\n    const currentStudents = await this.getStudents(this.getDiplomaStorageAddress()\n    )\n    this.setState({\n        students: currentStudents\n    })\n  }\n\n  async loadBcData(){\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const network = await web3.eth.net.getNetworkType()\n    console.log(\"network\",network)\n    const accounts = await web3.eth.getAccounts()\n    console.log(\"account\", accounts[0])\n    this.setState({account: accounts[0]})\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {account : ''}\n\n  }\n  \n  \n  getDiplomaStorageAddress () {\n    return this.props.match.params.address\n  }\n\n  async getStudents(address) {\n    const contract = createContract('0x798E41bBadA350Fb878EBDef9A3055cE4d9d2c23')\n    this.setState({ contract })\n    console.log(this.getDiplomaStorageAddress)\n    console.log(contract)\n\n    const student = await contract.methods.students(1).call().then(console.log)\n    this.setState({student}) \n \n    const idStudent =  contract.methods.students(1).call()\n    this.setState({idStudent})\n    const INE = await contract.methods.students(1).call()\n    this.setState({INE})\n    const firstName = await contract.methods.students(1).call()\n    this.setState({firstName})\n    const lastName = await contract.methods.students(1).call()\n    this.setState({lastName})\n    const birth = await contract.methods.students(1).call()\n    this.setState({birth})\n    \n    /* const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount}) */\n\n    /* for (var i = 1; i<=studentCount; i++) {\n        const student = await contract.methods.students(i).call().then(console.log)\n        this.setState({student})\n\n        const idStudent = await contract.methods.idStudent(0).call()\n        this.setState({idStudent})\n        const INE = await contract.methods.student(1).call()\n        const firstName = await contract.methods.student(2).call()\n        const lastName = await contract.methods.student(3).call()\n        const birth = await contract.methods.student(4).call()\n    this.setState({\n        students:[...this.state.students, student]\n    }) */\n    return {\n        idStudent: idStudent,\n        INE: INE,\n        firstName: firstName,\n        lastName: lastName,\n        birth: birth,\n    }\n};\n  \n\n\n  /* createStudent(INE, firstName, lastName, birth) {\n    this.setState({ loading: true })\n    this.state.contract.methods.createStudent(INE, firstName, lastName, birth).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  } */\n\n  render() {\n    return (\n      <div>\n          \n          <p>Account : [this.state.account]</p>\n      </div>\n    );\n  }\n}\n\nexport default CreateStudent;"]},"metadata":{},"sourceType":"module"}