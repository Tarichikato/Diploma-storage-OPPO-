{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO--RudyDesign/src/components/CheckStudents.js\";\nimport React, { Component } from 'react';\nimport { createContract } from '../ethereum/DiplomaStorageContract';\nimport { Table } from 'semantic-ui-react';\nimport { web3 } from './../ethereum/web3';\nimport { Header, Checkbox } from 'semantic-ui-react';\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\nimport NavBar from './../assets/NavBar';\nimport { PopupCheckStudent } from './../assets/PopupCheckStudent';\nexport class CheckStudents extends Component {\n  async componentDidMount() {\n    console.log(',,');\n    this.loadBcData();\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    console.log(\"contrat\", contract);\n    this.getContractState(contract);\n    await this.getStudent(this.getDiplomaStorageAddress(), this.state.id);\n  }\n\n  async getStudentId(INE, firstName, lastName, birth) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    const id = await contract.methods.checkStudent(INE, firstName, lastName, birth).call();\n    this.setState({\n      id\n    });\n    console.log('id', id);\n    return id;\n  }\n\n  async getContractState(contract) {\n    this.setState({\n      loading: true\n    });\n    const master = contract.methods.master().call();\n    console.log('master');\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount: studentCount\n    });\n    console.log('studentCount GCS', studentCount);\n  }\n\n  async loadBcData() {\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"account\", accounts[0]);\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(\"addresseContrat\", this.getDiplomaStorageAddress());\n    const contract = createContract(this.getDiplomaStorageAddress());\n    const studentCount = await this.state.contract.methods.studentCount().call();\n    this.setState({\n      studentCount: studentCount\n    });\n    console.log('contract', contract);\n    console.log('SC', studentCount);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      gotIt: \"\",\n      INE: 0,\n      firstName: '',\n      lastName: '',\n      birth: 0,\n      id: 0,\n      students: {\n        id: 0,\n        INE: 0,\n        fisrtName: '',\n        lastName: '',\n        birth: 0\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      gotIt: '',\n      contract: createContract(this.getDiplomaStorageAddress()),\n      INE: 0,\n      firstName: '',\n      lastName: '',\n      birth: 0,\n      id: 0,\n      account: '',\n      studentCount: 0,\n      students: []\n    };\n  }\n\n  getDiplomaStorageAddress() {\n    return this.props.match.params.address;\n  }\n\n  async getStudent(address, id) {\n    const contract = createContract(address);\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const student = await contract.methods.students(id).call();\n    this.setState({\n      students: [student]\n    });\n    console.log(\"student\", this.state.students);\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount\n    });\n  }\n\n  async onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    await this.setState({\n      [name]: value\n    });\n    console.log(name, value, this.state);\n  }\n\n  async onSubmit(event) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    event.preventDefault();\n    const id = await this.getStudentId(this.state.INE, this.state.firstName, this.state.lastName, this.state.birth);\n    console.log('idf', id);\n\n    if (id > 0) {\n      this.setState({\n        gotIt: \" est inscrit dans la Blockchain Ethereum\"\n      });\n    } else {\n      this.setState({\n        gotIt: \" n'est pas inscrit\"\n      });\n    }\n\n    await this.getStudent(this.getDiplomaStorageAddress(), parseInt(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5 text-center center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Check Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"Rentrez les informations de l'\\xE9tudiant dont vous voulez v\\xE9rifier l'existance:  \")))))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, \"INE number\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the INE number\",\n      name: \"INE\",\n      type: \"number\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the First Name\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the Last Name\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the Birthday\",\n      name: \"birth\",\n      type: \"number\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, \"Check Student\"))), /*#__PURE__*/React.createElement(\"p\", {\n      as: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 3\n      }\n    }, this.state.firstName, \" \", this.state.lastName, \" \", this.state.gotIt, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onSubmitBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      onClick: this.onSubmitReload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, \"Refresh\"))))));\n  }\n\n  onSubmitBack(event) {\n    event.preventDefault();\n    window.history.back();\n  }\n\n  onSubmitReload(event) {\n    event.preventDefault();\n    window.location.reload();\n  }\n\n}\nexport default CheckStudents;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO--RudyDesign/src/components/CheckStudents.js"],"names":["React","Component","createContract","Table","web3","Header","Checkbox","Button","ButtonGroup","Form","Spinner","Modal","ButtonToolbar","NavBar","PopupCheckStudent","CheckStudents","componentDidMount","console","log","loadBcData","contract","getDiplomaStorageAddress","setState","getContractState","getStudent","state","id","getStudentId","INE","firstName","lastName","birth","methods","checkStudent","call","loading","master","studentCount","accounts","eth","getAccounts","account","constructor","props","gotIt","students","fisrtName","onChange","bind","onSubmit","match","params","address","student","event","target","value","name","preventDefault","parseInt","render","onSubmitBack","onSubmitReload","window","history","back","location","reload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAgC,mBAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,IAA9B,EAAoCC,OAApC,EAA6CC,KAA7C,EAAoDC,aAApD,QAAyE,iBAAzE;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAMA,OAAO,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAoB3C,QAAMe,iBAAN,GAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAKC,UAAL;AACA,UAAMC,QAAQ,GAAGlB,cAAc,CAAC,KAAKmB,wBAAL,EAAD,CAA/B;AACA,SAAKC,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBE,QAAtB;AACA,SAAKG,gBAAL,CAAsBH,QAAtB;AACA,UAAM,KAAKI,UAAL,CAAgB,KAAKH,wBAAL,EAAhB,EAAgD,KAAKI,KAAL,CAAWC,EAA3D,CAAN;AACD;;AAED,QAAMC,YAAN,CAAmBC,GAAnB,EAAuBC,SAAvB,EAAiCC,QAAjC,EAA0CC,KAA1C,EAAgD;AAC9C,UAAMX,QAAQ,GAAGlB,cAAc,CAAC,KAAKmB,wBAAL,EAAD,CAA/B;AACA,UAAMK,EAAE,GAAG,MAAMN,QAAQ,CAACY,OAAT,CAAiBC,YAAjB,CAA8BL,GAA9B,EAAkCC,SAAlC,EAA4CC,QAA5C,EAAqDC,KAArD,EAA4DG,IAA5D,EAAjB;AACA,SAAKZ,QAAL,CAAc;AAACI,MAAAA;AAAD,KAAd;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBQ,EAAjB;AACA,WAAOA,EAAP;AACD;;AAED,QAAMH,gBAAN,CAAuBH,QAAvB,EAAgC;AAC9B,SAAKE,QAAL,CAAc;AAACa,MAAAA,OAAO,EAAC;AAAT,KAAd;AACA,UAAMC,MAAM,GAAGhB,QAAQ,CAACY,OAAT,CAAiBI,MAAjB,GAA0BF,IAA1B,EAAf;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMmB,YAAY,GAAG,MAAMjB,QAAQ,CAACY,OAAT,CAAiBK,YAAjB,GAAgCH,IAAhC,EAA3B;AACA,SAAKZ,QAAL,CAAc;AAACe,MAAAA,YAAY,EAAEA;AAAf,KAAd;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BmB,YAA/B;AACD;;AAED,QAAMlB,UAAN,GAAkB;AAChB,UAAMmB,QAAQ,GAAG,MAAMlC,IAAI,CAACmC,GAAL,CAASC,WAAT,EAAvB;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBoB,QAAQ,CAAC,CAAD,CAA/B;AACA,SAAKhB,QAAL,CAAc;AAACmB,MAAAA,OAAO,EAAEH,QAAQ,CAAC,CAAD;AAAlB,KAAd;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKG,wBAAL,EAA9B;AAEA,UAAMD,QAAQ,GAAGlB,cAAc,CAAC,KAAKmB,wBAAL,EAAD,CAA/B;AACA,UAAMgB,YAAY,GAAG,MAAM,KAAKZ,KAAL,CAAWL,QAAX,CAAoBY,OAApB,CAA4BK,YAA5B,GAA2CH,IAA3C,EAA3B;AACA,SAAKZ,QAAL,CAAc;AAACe,MAAAA,YAAY,EAAEA;AAAf,KAAd;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBE,QAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBmB,YAAjB;AACD;;AAEDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAzDjBlB,KAyDiB,GAzDT;AACJmB,MAAAA,KAAK,EAAE,EADH;AAEJhB,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,KAAK,EAAE,CALH;AAMJL,MAAAA,EAAE,EAAE,CANA;AAOJmB,MAAAA,QAAQ,EAAE;AACNnB,QAAAA,EAAE,EAAE,CADE;AAENE,QAAAA,GAAG,EAAE,CAFC;AAGNkB,QAAAA,SAAS,EAAE,EAHL;AAINhB,QAAAA,QAAQ,EAAE,EAJJ;AAKNC,QAAAA,KAAK,EAAE;AALD;AAPN,KAyDS;AAEjB,SAAKgB,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKvB,KAAL,GAAa;AACXmB,MAAAA,KAAK,EAAE,EADI;AAEXxB,MAAAA,QAAQ,EAAElB,cAAc,CAAC,KAAKmB,wBAAL,EAAD,CAFb;AAGXO,MAAAA,GAAG,EAAE,CAHM;AAIXC,MAAAA,SAAS,EAAE,EAJA;AAKXC,MAAAA,QAAQ,EAAE,EALC;AAMXC,MAAAA,KAAK,EAAE,CANI;AAOXL,MAAAA,EAAE,EAAG,CAPM;AAQXe,MAAAA,OAAO,EAAE,EARE;AASXJ,MAAAA,YAAY,EAAE,CATH;AAUXQ,MAAAA,QAAQ,EAAE;AAVC,KAAb;AAcD;;AAGDxB,EAAAA,wBAAwB,GAAI;AAC1B,WAAO,KAAKsB,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,OAA/B;AACD;;AAED,QAAM5B,UAAN,CAAiB4B,OAAjB,EAAyB1B,EAAzB,EAA6B;AAC3B,UAAMN,QAAQ,GAAGlB,cAAc,CAACkD,OAAD,CAA/B;AAEA,SAAK9B,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEA,UAAMiC,OAAO,GAAG,MAAMjC,QAAQ,CAACY,OAAT,CAAiBa,QAAjB,CAA0BnB,EAA1B,EAA8BQ,IAA9B,EAAtB;AACA,SAAKZ,QAAL,CAAc;AACVuB,MAAAA,QAAQ,EAAE,CAACQ,OAAD;AADA,KAAd;AAGApC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKO,KAAL,CAAWoB,QAAlC;AAEA,UAAMR,YAAY,GAAG,MAAMjB,QAAQ,CAACY,OAAT,CAAiBK,YAAjB,GAAgCH,IAAhC,EAA3B;AACA,SAAKZ,QAAL,CAAc;AAACe,MAAAA;AAAD,KAAd;AACD;;AAMD,QAAMU,QAAN,CAAeO,KAAf,EAAsB;AAElB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAID,MAAM,CAACC,KAAtB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AAEA,UAAM,KAAKnC,QAAL,CAAc;AAClB,OAACmC,IAAD,GAAQD;AADU,KAAd,CAAN;AAGAvC,IAAAA,OAAO,CAACC,GAAR,CAAYuC,IAAZ,EAAiBD,KAAjB,EAAuB,KAAK/B,KAA5B;AACH;;AAMC,QAAMwB,QAAN,CAAeK,KAAf,EAAsB;AACtB,UAAMlC,QAAQ,GAAGlB,cAAc,CAAC,KAAKmB,wBAAL,EAAD,CAA/B;AACAiC,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMhC,EAAE,GAAG,MAAM,KAAKC,YAAL,CAAkB,KAAKF,KAAL,CAAWG,GAA7B,EAAiC,KAAKH,KAAL,CAAWI,SAA5C,EAAsD,KAAKJ,KAAL,CAAWK,QAAjE,EAA0E,KAAKL,KAAL,CAAWM,KAArF,CAAjB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBQ,EAAlB;;AACA,QAAIA,EAAE,GAAG,CAAT,EAAY;AACV,WAAKJ,QAAL,CAAc;AAACsB,QAAAA,KAAK,EAAG;AAAT,OAAd;AACD,KAFD,MAEM;AACJ,WAAKtB,QAAL,CAAc;AAACsB,QAAAA,KAAK,EAAG;AAAT,OAAd;AACD;;AAED,UAAM,KAAKpB,UAAL,CAAgB,KAAKH,wBAAL,EAAhB,EAAgDsC,QAAQ,CAACjC,EAAD,CAAxD,CAAN;AAIH;;AAEDkC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADF,CAFJ,CADF,CADF,CADF,CALF,eAmBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,WAAW,EAAE,sBADjB;AAEI,MAAA,IAAI,EAAC,KAFT;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,QAAQ,EAAE,KAAKb,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAUI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,WAAW,EAAC,sBADhB;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,QAAQ,EAAE,KAAKA,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,eAmBI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,WAAW,EAAE,qBADjB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,QAAQ,EAAE,KAAKA,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAnBJ,eA4BI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,WAAW,EAAE,oBADjB;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,QAAQ,EAAE,KAAKA,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA5BJ,CAnBF,eAyDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEF,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AACE,MAAA,OAAO,EAAE,KAAKE,QADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFE,CAzDF,eAsEF;AAAG,MAAA,EAAE,EAAC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,KAAKxB,KAAL,CAAWI,SAAvB,OAAmC,KAAKJ,KAAL,CAAWK,QAA9C,OAAyD,KAAKL,KAAL,CAAWmB,KAApE,MAtEE,eAyEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AACI,MAAA,OAAO,EAAE,KAAKiB,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAKM,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,OAAhB;AACI,MAAA,OAAO,EAAE,KAAKC,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALN,CADE,CADF,CADF,CAzEF,CADF;AA4FD;;AAGDD,EAAAA,YAAY,CAACP,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACI,cAAN;AACAK,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf;AACC;;AAEHH,EAAAA,cAAc,CAACR,KAAD,EAAQ;AACpBA,IAAAA,KAAK,CAACI,cAAN;AACAK,IAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACC;;AAnP0C;AAuP7C,eAAepD,aAAf","sourcesContent":["import React, { Component }  from 'react'\nimport { createContract } from '../ethereum/DiplomaStorageContract'\nimport { Table } from 'semantic-ui-react'\nimport { web3 } from './../ethereum/web3';\nimport { Header, Checkbox} from 'semantic-ui-react';\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\nimport NavBar from './../assets/NavBar';\nimport { PopupCheckStudent } from './../assets/PopupCheckStudent';\n\n\n\n\n\nexport class CheckStudents extends Component {\n\n\n    state = {\n        gotIt: \"\",\n        INE: 0,\n        firstName: '',\n        lastName: '',\n        birth: 0,\n        id: 0,\n        students: {\n            id: 0,\n            INE: 0,\n            fisrtName: '',\n            lastName: '',\n            birth: 0,\n        }\n\n    }\n\n  async componentDidMount () {\n    console.log(',,')\n    this.loadBcData()\n    const contract = createContract(this.getDiplomaStorageAddress())\n    this.setState({contract})\n    console.log(\"contrat\",contract)\n    this.getContractState(contract)\n    await this.getStudent(this.getDiplomaStorageAddress(),this.state.id)\n  }\n\n  async getStudentId(INE,firstName,lastName,birth){\n    const contract = createContract(this.getDiplomaStorageAddress())\n    const id = await contract.methods.checkStudent(INE,firstName,lastName,birth).call()\n    this.setState({id})\n    console.log('id',id)\n    return(id)\n  }\n\n  async getContractState(contract){\n    this.setState({loading:true})\n    const master = contract.methods.master().call()\n    console.log('master')\n    const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount: studentCount})\n    console.log('studentCount GCS',studentCount)\n  }\n\n  async loadBcData(){\n    const accounts = await web3.eth.getAccounts()\n    console.log(\"account\", accounts[0])\n    this.setState({account: accounts[0]})\n    console.log(\"addresseContrat\",this.getDiplomaStorageAddress())\n\n    const contract = createContract(this.getDiplomaStorageAddress())\n    const studentCount = await this.state.contract.methods.studentCount().call()\n    this.setState({studentCount: studentCount})\n    console.log('contract',contract)\n    console.log('SC',studentCount)\n  }\n \n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      gotIt: '',\n      contract: createContract(this.getDiplomaStorageAddress()),\n      INE: 0,\n      firstName: '',\n      lastName: '',\n      birth: 0,\n      id : 0,\n      account: '',\n      studentCount: 0,\n      students: [],\n\n      \n    }\n  }\n  \n  \n  getDiplomaStorageAddress () {\n    return this.props.match.params.address\n  }\n\n  async getStudent(address,id) {\n    const contract = createContract(address)\n    \n    this.setState({ contract })\n    console.log(contract)\n\n    const student = await contract.methods.students(id).call()\n    this.setState({\n        students: [student]\n    })\n    console.log(\"student\", this.state.students)\n\n    const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount})\n  }\n\n  \n\n\n\n  async onChange(event) {\n    \n      const target = event.target;\n      const value =  target.value;\n      const name = target.name;\n  \n      await this.setState({\n        [name]: value\n      });\n      console.log(name,value,this.state)  \n  }\n\n  \n\n\n\n    async onSubmit(event) {\n    const contract = createContract(this.getDiplomaStorageAddress())\n    event.preventDefault();\n    const id = await this.getStudentId(this.state.INE,this.state.firstName,this.state.lastName,this.state.birth)\n    console.log('idf',id)\n    if (id > 0) {\n      this.setState({gotIt : \" est inscrit dans la Blockchain Ethereum\"});\n    } else{\n      this.setState({gotIt : \" n'est pas inscrit\"});\n    }\n\n    await this.getStudent(this.getDiplomaStorageAddress(),parseInt(id))\n\n\n    \n}\n\nrender() {\n\n  return (\n    <div>\n      <div>\n          <NavBar/>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row mt-5 text-center center\">\n          <div className=\"col-lg-10 mb-4 grid-margin\">\n            <div className=\"card h-100\">\n                <h4 className=\"card-header\">Check Student</h4>\n                <div className=\"card-body\">\n                  <p className=\"card-text\">Rentrez les informations de l'étudiant dont vous voulez vérifier l'existance:  </p>\n                </div>\n            </div>\n          </div>\n      </div>    \n    </div>\n\n\n      <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n              <Form.Label>INE number</Form.Label>\n              <Form.Control \n                  placeholder= 'Enter the INE number'\n                  name=\"INE\"\n                  type=\"number\"\n                  onChange={this.onChange} />\n          </Form.Group>\n          \n          <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control \n                  placeholder='Enter the First Name'\n                  name=\"firstName\"\n                  type=\"text\"\n                  onChange={this.onChange} />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control \n                  placeholder= 'Enter the Last Name'\n                  name=\"lastName\"\n                  type=\"text\"\n                  onChange={this.onChange} />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Birthday</Form.Label>\n              <Form.Control \n                  placeholder= 'Enter the Birthday'\n                  name=\"birth\"\n                  type=\"number\"\n                  onChange={this.onChange} />\n          </Form.Group>\n      </Form>\n    \n      <div>\n      \n    <ButtonToolbar>\n      <Button variant=\"primary\" \n        onClick={this.onSubmit}\n        >Check Student\n      </Button>\n\n    </ButtonToolbar> \n\n      </div>\n\n      \n  <p as='h1'>{this.state.firstName} {this.state.lastName} {this.state.gotIt} </p>\n\n\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-lg-4 mb-4 grid-margin\">\n        <ButtonGroup size=\"lg\" >\n              <Button variant=\"primary\" \n                  onClick={this.onSubmitBack}\n                  >Back\n              </Button>\n              <Button variant=\"light\" \n                  onClick={this.onSubmitReload}\n                  >Refresh\n              </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  </div> \n    </div>\n  );\n}\n \n\nonSubmitBack(event) {\n  event.preventDefault();\n  window.history.back()\n  }\n\nonSubmitReload(event) {\n  event.preventDefault();\n  window.location.reload()\n  }\n\n}\n\nexport default CheckStudents;"]},"metadata":{},"sourceType":"module"}