{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO--RudyDesign/src/components/CheckStudents.js\";\nimport React, { Component } from 'react';\nimport { createContract } from '../ethereum/DiplomaStorageContract';\nimport { Table } from 'semantic-ui-react';\nimport Web3 from 'web3';\nimport { web3 } from '../ethereum/web3';\nimport { Button, Header, Form, Checkbox } from 'semantic-ui-react';\nexport class CheckStudents extends Component {\n  async componentDidMount() {\n    this.loadBcData();\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    console.log(\"contrat\", contract);\n    this.getContractState(contract);\n    await this.getStudent(this.getDiplomaStorageAddress(), this.state.id);\n  }\n\n  async getStudentId(INE, firstName, lastName, birth) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    const id = await contract.methods.checkStudent(INE, firstName, lastName, birth).call();\n    this.setState({\n      id\n    });\n    console.log('id', id);\n    return id;\n  }\n\n  async getContractState(contract) {\n    this.setState({\n      loading: true\n    });\n    const master = contract.methods.master().call();\n    console.log('master');\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount: studentCount\n    });\n    console.log('studentCount GCS', studentCount);\n  }\n\n  async loadBcData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network\", network);\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"account\", accounts[0]);\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(\"addresseContrat\", this.getDiplomaStorageAddress());\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    const studentCount = await this.state.contract.methods.studentCount().call();\n    this.setState({\n      studentCount: studentCount\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      gotIt: \"\",\n      INE: 0,\n      firstName: 'N/A',\n      lastName: 'N/A',\n      birth: 0,\n      id: 0,\n      students: {\n        id: 0,\n        INE: 0,\n        fisrtName: 'N/A',\n        lastName: 'N/A',\n        birth: 0\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      gotIt: '',\n      contract: createContract(this.getDiplomaStorageAddress()),\n      INE: 0,\n      firstName: 'N/A',\n      lastName: 'N/A',\n      birth: 0,\n      id: 0,\n      account: '',\n      studentCount: 0,\n      students: []\n    };\n  }\n\n  getDiplomaStorageAddress() {\n    return '0x64399f5759209029856F40854699f65e57ED4225';\n  }\n\n  async getStudent(address, id) {\n    const contract = createContract(address);\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const student = await contract.methods.students(id).call();\n    this.setState({\n      students: [student]\n    });\n    console.log(\"student\", this.state.students);\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount\n    });\n  }\n\n  async onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    await this.setState({\n      [name]: value\n    });\n    console.log(name, value, this.state);\n  }\n\n  async onSubmit(event) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    event.preventDefault();\n    const id = await this.getStudentId(this.state.INE, this.state.firstName, this.state.lastName, this.state.birth);\n    console.log('idf', id);\n\n    if (id > 0) {\n      this.setState({\n        gotIt: \"HO YEAY YOU EXIST\"\n      });\n    } else {\n      this.setState({\n        gotIt: \"\"\n      });\n    }\n\n    await this.getStudent(this.getDiplomaStorageAddress(), parseInt(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"INE :\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"INE\",\n      type: \"number\",\n      value: this.state.INE,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, \"firstName :\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"firstName\",\n      type: \"text\",\n      value: this.state.firstName,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, \"lastName :\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"lastName\",\n      type: \"text\",\n      value: this.state.lastName,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, \"Birth :\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"birth\",\n      type: \"number\",\n      value: this.state.birth,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, \"Account : \", this.state.account), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, \"INE : \", this.state.INE, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, \"firstName : \", this.state.firstName, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, \"lastName : \", this.state.lastName, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, \"Birth : \", this.state.birth, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, \"id : \", this.state.id, \" \"), /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }\n    }, this.state.firstName, \" \", this.state.lastName, \" \", this.state.gotIt, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, \"StudentCount : \", this.state.studentCount), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, \"Contract address: \", this.getDiplomaStorageAddress()), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      padded: true,\n      color: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, student.INE);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      ssigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, \"INE\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, student.INE);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, student.firstName);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }\n      }, student.lastName);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      }, student.birth);\n    })))))));\n  }\n\n}\nexport default CheckStudents;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO--RudyDesign/src/components/CheckStudents.js"],"names":["React","Component","createContract","Table","Web3","web3","Button","Header","Form","Checkbox","CheckStudents","componentDidMount","loadBcData","contract","getDiplomaStorageAddress","setState","console","log","getContractState","getStudent","state","id","getStudentId","INE","firstName","lastName","birth","methods","checkStudent","call","loading","master","studentCount","givenProvider","network","eth","net","getNetworkType","accounts","getAccounts","account","constructor","props","gotIt","students","fisrtName","onChange","bind","onSubmit","address","student","event","target","value","name","preventDefault","parseInt","render","map","key"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\nimport { createContract } from '../ethereum/DiplomaStorageContract'\nimport { Table } from 'semantic-ui-react'\nimport Web3 from 'web3'\nimport { web3 } from '../ethereum/web3'\nimport { Button, Header, Form, Checkbox} from 'semantic-ui-react';\n\n\n\n\nexport class CheckStudents extends Component {\n\n\n    state = {\n        gotIt: \"\",\n        INE: 0,\n        firstName: 'N/A',\n        lastName: 'N/A',\n        birth: 0,\n        id: 0,\n        students: {\n            id: 0,\n            INE: 0,\n            fisrtName: 'N/A',\n            lastName: 'N/A',\n            birth: 0,\n        }\n\n    }\n\n  async componentDidMount () {\n    this.loadBcData()\n    const contract = createContract(this.getDiplomaStorageAddress())\n    this.setState({contract})\n    console.log(\"contrat\",contract)\n    this.getContractState(contract)\n    await this.getStudent(this.getDiplomaStorageAddress(),this.state.id)\n  }\n\n  async getStudentId(INE,firstName,lastName,birth){\n    const contract = createContract(this.getDiplomaStorageAddress())\n    const id = await contract.methods.checkStudent(INE,firstName,lastName,birth).call()\n    this.setState({id})\n    console.log('id',id)\n    return(id)\n  }\n\n  async getContractState(contract){\n    this.setState({loading:true})\n    const master = contract.methods.master().call()\n    console.log('master')\n    const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount: studentCount})\n    console.log('studentCount GCS',studentCount)\n  }\n\n  async loadBcData(){\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const network = await web3.eth.net.getNetworkType()\n    console.log(\"network\",network)\n    const accounts = await web3.eth.getAccounts()\n    console.log(\"account\", accounts[0])\n    this.setState({account: accounts[0]})\n    console.log(\"addresseContrat\",this.getDiplomaStorageAddress())\n\n    const contract = createContract(this.getDiplomaStorageAddress())\n    this.setState({contract})\n    const studentCount = await this.state.contract.methods.studentCount().call()\n    this.setState({studentCount: studentCount})\n  }\n \n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      gotIt: '',\n      contract: createContract(this.getDiplomaStorageAddress()),\n      INE: 0,\n      firstName: 'N/A',\n      lastName: 'N/A',\n      birth: 0,\n      id : 0,\n      account: '',\n      studentCount: 0,\n      students: [],\n\n      \n    }\n  }\n  \n  \n  getDiplomaStorageAddress () {\n    return '0x64399f5759209029856F40854699f65e57ED4225'\n  }\n\n  async getStudent(address,id) {\n    const contract = createContract(address)\n    \n    this.setState({ contract })\n    console.log(contract)\n\n    const student = await contract.methods.students(id).call()\n    this.setState({\n        students: [student]\n    })\n    console.log(\"student\", this.state.students)\n\n    const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount})\n  }\n\n  \n\n\n\n  async onChange(event) {\n    \n      const target = event.target;\n      const value =  target.value;\n      const name = target.name;\n  \n      await this.setState({\n        [name]: value\n      });\n      console.log(name,value,this.state)  \n  }\n\n  \n\n\n\n    async onSubmit(event) {\n    const contract = createContract(this.getDiplomaStorageAddress())\n    event.preventDefault();\n    const id = await this.getStudentId(this.state.INE,this.state.firstName,this.state.lastName,this.state.birth)\n    console.log('idf',id)\n    if (id > 0) {\n      this.setState({gotIt : \"HO YEAY YOU EXIST\"});\n    } else{\n      this.setState({gotIt : \"\"});\n    }\n\n    await this.getStudent(this.getDiplomaStorageAddress(),parseInt(id))\n\n\n    \n}\n\n  render() {\n    return (\n\n      \n      \n        <div>\n\n<form>\n        <label>\n          INE :\n          <input\n            name=\"INE\"\n            type=\"number\"\n            value={this.state.INE}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          firstName :\n          <input\n            name=\"firstName\"\n            type=\"text\"\n            value={this.state.firstName}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          lastName :\n          <input\n            name=\"lastName\"\n            type=\"text\"\n            value={this.state.lastName}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          Birth :\n          <input\n            name=\"birth\"\n            type=\"number\"\n            value={this.state.birth}\n            onChange={this.onChange} />\n        </label>\n      </form>\n\n      <Button\n          type='submit'\n          onClick={this.onSubmit}\n          >\n          Submit\n      </Button>\n\n\n          <p>Account : {this.state.account}</p>\n          <p>INE : {this.state.INE} </p>\n          <p>firstName : {this.state.firstName} </p>\n          <p>lastName : {this.state.lastName} </p>\n          <p>Birth : {this.state.birth} </p>\n\n\n\n          <p>id : {this.state.id} </p>\n\n\n    <Header as='h1'>{this.state.firstName} {this.state.lastName} {this.state.gotIt} </Header>\n\n          <p>StudentCount : {this.state.studentCount}</p>\n\n          <p>Contract address: {this.getDiplomaStorageAddress()}</p>\n\n            <Table celled padded color =\"yellow\">\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Value</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n  \n                <Table.Body>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       Student\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n              \n                <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.INE}\n                  \n                \n                </div>\n              )\n            })}\n          </ul>\n                   \n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell ssigleline=\"true\"> \n                       INE\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.INE}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       First Name \n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.firstName}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       Last Name\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.lastName}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       Birthday\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.birth}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n  \n                </Table.Body>\n            </Table>\n          \n        </div>\n    );\n  }\n}\n\nexport default CheckStudents;"]},"metadata":{},"sourceType":"module"}