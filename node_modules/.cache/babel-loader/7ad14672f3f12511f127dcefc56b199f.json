{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO-/src/components/CreateSchool.js\";\nimport React, { Component } from 'react';\nimport { createContract } from './../ethereum/DiplomaStorageContract';\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\nimport { web3 } from './../ethereum/web3';\nimport NavBar from './../assets/NavBar';\nimport { PopupCreateSchool } from '../assets/PopupCreateSchool';\nexport class CreateSchool extends Component {\n  async componentDidMount() {\n    await this.getSchools(this.getDiplomaStorageAddress());\n  }\n\n  getDiplomaStorageAddress() {\n    return this.props.match.params.address;\n  }\n\n  async getSchools(address) {\n    const contract = createContract(address);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(accounts);\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const schoolCount = await contract.methods.schoolCount().call();\n    this.setState({\n      schoolCount\n    });\n\n    for (var i = 1; i <= schoolCount; i++) {\n      const school = await contract.methods.schools(i).call();\n      this.setState({\n        schools: [...this.state.schools, school]\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      schools: {\n        idSchool: 0,\n        address: \"\",\n        schoolName: 'N/A',\n        schoolCount: 0,\n        answer: ''\n      }\n    };\n    this.state = {\n      account: '',\n      schoolCount: 0,\n      schools: [],\n      ModalShow: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async createSchool(schoolName, address) {\n    var answer = \"\";\n    const lv = await this.state.contract.methods.isAutorized(4, this.state.account).call();\n    console.log(\"lv\", lv);\n\n    if (lv == 3) {\n      answer = \"You have the right\";\n      const exists = await this.state.contract.methods.checkSchool(schoolName).call();\n      console.log('exists', exists);\n\n      if (exists == 0) {\n        this.state.contract.methods.createSchool(schoolName, address).send({\n          from: this.state.account\n        });\n      } else {\n        answer = \"this school\".concat(schoolName).concat(\"already exists with. It has the id: \").concat(exists);\n      }\n    } else {\n      answer = \"No servent can serve 2 masters boy\";\n    }\n\n    console.log(\"Account\", this.state.account);\n    console.log('answer', answer);\n  }\n\n  onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    console.log(name, value, this.state);\n    this.setState({\n      [name]: value\n    });\n    console.log(name, value, this.state);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.createSchool(this.state.schoolName, this.state.address);\n  }\n\n  render() {\n    let ModalClose = () => this.setState({\n      ModalShow: false\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5 text-center center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Create School\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }\n    }, \"Rentrez les informations de l \\xE9cole que vous voulez cr\\xE9er:  \")))))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the address\",\n      name: \"address\",\n      type: \"text\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, \"SchoolName\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the schoolName\",\n      name: \"schoolName\",\n      type: \"text\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        ModalShow: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \"Create School\"), /*#__PURE__*/React.createElement(PopupCreateSchool, {\n      show: this.state.ModalShow,\n      onHide: ModalClose,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onSubmitBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      onClick: this.onSubmitReload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, \"Refresh\"))))));\n  }\n\n  onSubmitBack(event) {\n    event.preventDefault();\n    window.history.back();\n  }\n\n  onSubmitReload(event) {\n    event.preventDefault();\n    window.location.reload();\n  }\n\n}\nexport default CreateSchool;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO-/src/components/CreateSchool.js"],"names":["React","Component","createContract","Button","ButtonGroup","Form","Spinner","Modal","ButtonToolbar","web3","NavBar","PopupCreateSchool","CreateSchool","componentDidMount","getSchools","getDiplomaStorageAddress","props","match","params","address","contract","accounts","eth","getAccounts","setState","account","console","log","schoolCount","methods","call","i","school","schools","state","constructor","idSchool","schoolName","answer","ModalShow","onChange","bind","onSubmit","createSchool","lv","isAutorized","exists","checkSchool","send","from","concat","event","target","value","name","preventDefault","render","ModalClose","onSubmitBack","onSubmitReload","window","history","back","location","reload"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\nimport { createContract } from './../ethereum/DiplomaStorageContract'\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\nimport { web3 } from './../ethereum/web3';\nimport NavBar from './../assets/NavBar';\nimport { PopupCreateSchool } from '../assets/PopupCreateSchool';\n\n\n\n\nexport class CreateSchool extends Component {\n\n\n      state = {\n          schools: {\n            idSchool: 0,\n            address: \"\",\n            schoolName: 'N/A',\n            schoolCount: 0,\n            answer: '',\n          }\n\n      }\n\n    async componentDidMount () {\n      await this.getSchools(this.getDiplomaStorageAddress()\n      )\n    }\n\n    getDiplomaStorageAddress () {\n      return this.props.match.params.address\n    }\n\n    async getSchools(address) {\n      const contract = createContract(address)\n      const accounts = await web3.eth.getAccounts()\n      this.setState({ account: accounts[0] })\n      console.log(accounts)\n\n      this.setState({ contract })\n      console.log(contract)\n\n      const schoolCount = await contract.methods.schoolCount().call()\n      this.setState({schoolCount})\n\n      for (var i = 1; i <= schoolCount; i++) {\n          const school = await contract.methods.schools(i).call()\n          this.setState({\n            schools: [...this.state.schools, school]\n          })\n        }\n\n  }\n\n  constructor(props) {\n      super(props)\n      this.state = {\n        account:'',\n        schoolCount: 0,\n        schools: [],\n        ModalShow: false,\n      }\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n  }\n\n\n  async createSchool(schoolName,address) {\n      var answer = \"\"\n      const lv = await  this.state.contract.methods.isAutorized(4,this.state.account).call()\n      console.log(\"lv\",lv)\n      if(lv == 3){\n        answer = \"You have the right\"\n        const exists = await  this.state.contract.methods.checkSchool(schoolName).call()\n        console.log('exists',exists)\n          if(exists == 0){\n      this.state.contract.methods.createSchool(schoolName,address).send({ from: this.state.account })\n          }\n          else{\n            answer = \"this school\".concat(schoolName).concat(\"already exists with. It has the id: \").concat(exists)\n          }\n      }\n      else{\n      answer = \"No servent can serve 2 masters boy\"\n      }\n      console.log(\"Account\" , this.state.account)\n      console.log('answer',answer)\n  }\n\n\n      onChange(event) {\n\n      const target = event.target;\n      const value =  target.value;\n      const name = target.name;\n      console.log(name,value,this.state)\n      this.setState({\n        [name]: value\n      });\n      console.log(name,value,this.state)\n  }\n\n\n      onSubmit(event) {\n      event.preventDefault();\n      this.createSchool(this.state.schoolName,this.state.address)\n    }\n\n\n    render() {\n      let ModalClose =() => this.setState({ModalShow:false})\n\n      return (\n        <div>\n          <div>\n              <NavBar/>\n          </div>\n\n          <div className=\"container\">\n            <div className=\"row mt-5 text-center center\">\n              <div className=\"col-lg-10 mb-4 grid-margin\">\n                <div className=\"card h-100\">\n                    <h4 className=\"card-header\">Create School</h4>\n                    <div className=\"card-body\">\n                      <p className=\"card-text\">Rentrez les informations de l école que vous voulez créer:  </p>\n                    </div>\n                </div>\n              </div>\n          </div>\n        </div>\n\n\n          <Form>\n              <Form.Group controlId=\"formGroupEmail\">\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                      placeholder= 'Enter the address'\n                      name=\"address\"\n                      type=\"text\"\n                      onChange={this.onChange} />\n              </Form.Group>\n\n              <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>SchoolName</Form.Label>\n                  <Form.Control\n                      placeholder='Enter the schoolName'\n                      name=\"schoolName\"\n                      type=\"text\"\n                      onChange={this.onChange} />\n              </Form.Group>\n\n\n          </Form>\n\n          <div>\n\n        <ButtonToolbar>\n          <Button variant=\"primary\"\n            onClick={() => this.setState({ModalShow: true})}\n            >Create School\n          </Button>\n\n          <PopupCreateSchool\n            show={this.state.ModalShow}\n            onHide={ModalClose}\n            onSubmit={this.onSubmit}\n          />\n        </ButtonToolbar>\n\n          </div>\n\n          <div className=\"container\">\n            <div className=\"row mt-5\">\n              <div className=\"col-lg-4 mb-4 grid-margin\">\n            <ButtonGroup size=\"lg\" >\n                  <Button variant=\"primary\"\n                      onClick={this.onSubmitBack}\n                      >Back\n                  </Button>\n                  <Button variant=\"light\"\n                      onClick={this.onSubmitReload}\n                      >Refresh\n                  </Button>\n            </ButtonGroup>\n          </div>\n        </div>\n      </div>\n\n        </div>\n      );\n    }\n\n    onSubmitBack(event) {\n      event.preventDefault();\n      window.history.back()\n      }\n\n    onSubmitReload(event) {\n      event.preventDefault();\n      window.location.reload()\n      }\n\n}\n\nexport default CreateSchool;\n"]},"metadata":{},"sourceType":"module"}