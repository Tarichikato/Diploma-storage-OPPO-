{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO-/src/components/CheckSchools.js\";\nimport React, { Component } from 'react';\nimport { createContract } from '../ethereum/DiplomaStorageContract'; //import { Table } from 'semantic-ui-react'\n\nimport { web3 } from './../ethereum/web3';\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\nimport NavBar from './../assets/NavBar';\nimport { PopupCheckSchools } from '../assets/PopupCheckSchools';\nexport class CheckSchools extends Component {\n  async componentDidMount() {\n    console.log('this.props.match.params.address', this.props.match.params.address);\n    this.loadBcData();\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    console.log(\"contrat\", contract);\n    this.getContractState(contract);\n    await this.getSchool(this.getDiplomaStorageAddress(), this.state.id);\n  }\n\n  async getSchoolId(schoolName) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    const id = await contract.methods.checkSchool(schoolName).call();\n    this.setState({\n      id\n    });\n    console.log('id', id);\n    return id;\n  }\n\n  async getContractState(contract) {\n    this.setState({\n      loading: true\n    });\n    const master = contract.methods.master().call();\n    console.log('master');\n    const schoolCount = await contract.methods.schoolCount().call();\n    this.setState({\n      schoolCount: schoolCount\n    });\n    console.log('schoolCount GCS', schoolCount);\n  }\n\n  async loadBcData() {\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"account\", accounts[0]);\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(\"addresseContrat\", this.getDiplomaStorageAddress());\n    const contract = createContract(this.getDiplomaStorageAddress());\n    const schoolCount = await this.state.contract.methods.schoolCount().call();\n    this.setState({\n      schoolCount: schoolCount\n    });\n    console.log('contract', contract);\n    console.log('SC', schoolCount);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      schools: {\n        name: '',\n        id: 0\n      },\n      answer: '',\n      school: '',\n      ModalShow: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      contract: createContract(this.getDiplomaStorageAddress()),\n      id: 0,\n      name: ''\n    };\n  }\n\n  getDiplomaStorageAddress() {\n    return this.props.match.params.address;\n  }\n\n  async getSchool(address, id) {\n    const contract = createContract(address);\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const school = await contract.methods.schools(id).call();\n    this.setState({\n      schools: [school]\n    });\n    this.setState({\n      school,\n      school\n    });\n    console.log(\"schools\", this.state.schools);\n    console.log(\"school\", this.state.school);\n    const schoolCount = await contract.methods.schoolCount().call();\n    this.setState({\n      schoolCount\n    });\n  }\n\n  async onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    await this.setState({\n      [name]: value\n    });\n    console.log(name, value, this.state);\n  }\n\n  async onSubmit(event) {\n    const infos = this.state.schoolName;\n    this.setState({\n      infos\n    });\n    const contract = createContract(this.getDiplomaStorageAddress());\n    event.preventDefault();\n    const id = await this.getSchoolId(this.state.schoolName);\n    console.log('id', id);\n\n    if (id > 0) {\n      this.setState({\n        answer: \" Est inscrit dans la Blockchain Ethereum\"\n      });\n    } else {\n      this.setState({\n        answer: \" N'est pas inscrit\"\n      });\n    }\n\n    console.log('answer', this.state.answer, this.state.school);\n    await this.getSchool(this.getDiplomaStorageAddress(), parseInt(id));\n  }\n\n  render() {\n    let ModalClose = () => this.setState({\n      ModalShow: false\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5 text-center center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \"Check School\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, \"Rentrez les informations de l'\\xE9cole dont vous voulez v\\xE9rifier l'existance:  \")))))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \"School Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter the school Name\",\n      name: \"schoolName\",\n      type: \"text\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        ModalShow: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }, \"Check School\"), /*#__PURE__*/React.createElement(PopupCheckSchools, {\n      show: this.state.ModalShow,\n      onHide: ModalClose,\n      onSubmit: this.onSubmit,\n      answer: this.state.answer,\n      firstName: this.state.infos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 mb-4 grid-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onSubmitBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      onClick: this.onSubmitReload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, \"Refresh\"))))));\n  }\n\n  onSubmitBack(event) {\n    event.preventDefault();\n    window.history.back();\n  }\n\n  onSubmitReload(event) {\n    event.preventDefault();\n    window.location.reload();\n  }\n\n}\nexport default CheckSchools;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/Diploma-storage-OPPO-/src/components/CheckSchools.js"],"names":["React","Component","createContract","web3","Button","ButtonGroup","Form","Spinner","Modal","ButtonToolbar","NavBar","PopupCheckSchools","CheckSchools","componentDidMount","console","log","props","match","params","address","loadBcData","contract","getDiplomaStorageAddress","setState","getContractState","getSchool","state","id","getSchoolId","schoolName","methods","checkSchool","call","loading","master","schoolCount","accounts","eth","getAccounts","account","constructor","schools","name","answer","school","ModalShow","onChange","bind","onSubmit","event","target","value","infos","preventDefault","parseInt","render","ModalClose","onSubmitBack","onSubmitReload","window","history","back","location","reload"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\r\nimport { createContract } from '../ethereum/DiplomaStorageContract'\r\n//import { Table } from 'semantic-ui-react'\r\nimport { web3 } from './../ethereum/web3';\r\nimport { Button, ButtonGroup, Form, Spinner, Modal, ButtonToolbar } from 'react-bootstrap';\r\nimport NavBar from './../assets/NavBar';\r\nimport { PopupCheckSchools } from '../assets/PopupCheckSchools';\r\n\r\n\r\n\r\n\r\n\r\nexport class CheckSchools extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        schools: {\r\n          name : '',\r\n          id : 0\r\n        },\r\n        answer:'',\r\n        school: '',\r\n        ModalShow: false,\r\n\r\n    }\r\n\r\n  async componentDidMount () {\r\n    console.log('this.props.match.params.address',this.props.match.params.address)\r\n    this.loadBcData()\r\n    const contract = createContract(this.getDiplomaStorageAddress())\r\n    this.setState({contract})\r\n    console.log(\"contrat\",contract)\r\n    this.getContractState(contract)\r\n    await this.getSchool(this.getDiplomaStorageAddress(),this.state.id)\r\n  }\r\n\r\n  async getSchoolId(schoolName){\r\n    const contract = createContract(this.getDiplomaStorageAddress())\r\n    const id = await contract.methods.checkSchool(schoolName).call()\r\n    this.setState({id})\r\n    console.log('id',id)\r\n    return(id)\r\n  }\r\n\r\n  async getContractState(contract){\r\n    this.setState({loading:true})\r\n    const master = contract.methods.master().call()\r\n    console.log('master')\r\n    const schoolCount = await contract.methods.schoolCount().call()\r\n    this.setState({schoolCount: schoolCount})\r\n    console.log('schoolCount GCS',schoolCount)\r\n  }\r\n\r\n  async loadBcData(){\r\n    const accounts = await web3.eth.getAccounts()\r\n    console.log(\"account\", accounts[0])\r\n    this.setState({account: accounts[0]})\r\n    console.log(\"addresseContrat\",this.getDiplomaStorageAddress())\r\n\r\n    const contract = createContract(this.getDiplomaStorageAddress())\r\n    const schoolCount = await this.state.contract.methods.schoolCount().call()\r\n    this.setState({schoolCount: schoolCount})\r\n    console.log('contract',contract)\r\n    console.log('SC',schoolCount)\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      contract: createContract(this.getDiplomaStorageAddress()),\r\n\r\n      id : 0 ,\r\n      name : ''\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n  getDiplomaStorageAddress () {\r\n    return this.props.match.params.address\r\n  }\r\n\r\n  async getSchool(address,id) {\r\n    const contract = createContract(address)\r\n\r\n    this.setState({ contract })\r\n    console.log(contract)\r\n\r\n    const school = await contract.methods.schools(id).call()\r\n    this.setState({\r\n        schools: [school]\r\n    })\r\n    this.setState({school,school})\r\n    console.log(\"schools\", this.state.schools)\r\n    console.log(\"school\", this.state.school)\r\n\r\n    const schoolCount = await contract.methods.schoolCount().call()\r\n    this.setState({schoolCount})\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  async onChange(event) {\r\n\r\n      const target = event.target;\r\n      const value =  target.value;\r\n      const name = target.name;\r\n\r\n      await this.setState({\r\n        [name]: value\r\n      });\r\n      console.log(name,value,this.state)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n    async onSubmit(event) {\r\n    const infos = this.state.schoolName\r\n    this.setState({infos})\r\n    const contract = createContract(this.getDiplomaStorageAddress())\r\n    event.preventDefault();\r\n    const id = await this.getSchoolId(this.state.schoolName)\r\n    console.log('id',id)\r\n    if (id > 0) {\r\n      this.setState({answer : \" Est inscrit dans la Blockchain Ethereum\"});\r\n    } else{\r\n      this.setState({answer : \" N'est pas inscrit\"});\r\n    }\r\n    console.log('answer',this.state.answer,this.state.school)\r\n\r\n    await this.getSchool(this.getDiplomaStorageAddress(),parseInt(id))\r\n\r\n\r\n\r\n}\r\n\r\nrender() {\r\n  let ModalClose =() => this.setState({ModalShow:false})\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n          <NavBar/>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row mt-5 text-center center\">\r\n          <div className=\"col-lg-10 mb-4 grid-margin\">\r\n            <div className=\"card h-100\">\r\n                <h4 className=\"card-header\">Check School</h4>\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">Rentrez les informations de l'école dont vous voulez vérifier l'existance:  </p>\r\n                </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n      <Form>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n              <Form.Label>School Name</Form.Label>\r\n              <Form.Control\r\n                  placeholder= 'Enter the school Name'\r\n                  name=\"schoolName\"\r\n                  type=\"text\"\r\n                  onChange={this.onChange} />\r\n          </Form.Group>\r\n\r\n\r\n      </Form>\r\n\r\n      <div>\r\n\r\n    <ButtonToolbar>\r\n      <Button variant=\"primary\"\r\n        onClick={() => this.setState({ModalShow: true})}\r\n        >Check School\r\n      </Button>\r\n      <PopupCheckSchools\r\n          show={this.state.ModalShow}\r\n          onHide={ModalClose}\r\n          onSubmit={this.onSubmit}\r\n          answer={this.state.answer}\r\n          firstName = {this.state.infos}\r\n\r\n        />\r\n\r\n    </ButtonToolbar>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-lg-4 mb-4 grid-margin\">\r\n        <ButtonGroup size=\"lg\" >\r\n              <Button variant=\"primary\"\r\n                  onClick={this.onSubmitBack}\r\n                  >Back\r\n              </Button>\r\n              <Button variant=\"light\"\r\n                  onClick={this.onSubmitReload}\r\n                  >Refresh\r\n              </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nonSubmitBack(event) {\r\n  event.preventDefault();\r\n  window.history.back()\r\n  }\r\n\r\nonSubmitReload(event) {\r\n  event.preventDefault();\r\n  window.location.reload()\r\n  }\r\n\r\n}\r\n\r\nexport default CheckSchools;\r\n"]},"metadata":{},"sourceType":"module"}