{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CreateStudent.js\";\nimport React, { Component } from 'react';\nimport { createContract } from './../ethereum/DiplomaStorageContract';\nimport { Table } from 'semantic-ui-react';\nimport Web3 from 'web3';\nexport class CreateStudent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      students: {\n        name: 'N/A',\n        idStudent: 0,\n        INE: 0,\n        fisrtName: 'N/A',\n        lastName: 'N/A',\n        birth: 0\n      }\n    };\n  }\n\n  async componentDidMount() {\n    this.loadBcData();\n    const currentStudents = await this.getStudents(this.getDiplomaStorageAddress());\n    this.setState({\n      students: currentStudents\n    });\n  }\n\n  async loadBcData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network\", network);\n  }\n\n  getDiplomaStorageAddress() {\n    return this.props.match.params.address;\n  }\n\n  async getStudents(address) {\n    const contract = createContract('0x798E41bBadA350Fb878EBDef9A3055cE4d9d2c23');\n    this.setState({\n      contract\n    });\n    console.log(this.getDiplomaStorageAddress);\n    console.log(contract);\n    const student = await contract.methods.students(1).call().then(console.log);\n    this.setState({\n      student\n    });\n    const idStudent = contract.methods.students(1).call();\n    this.setState({\n      idStudent\n    });\n    const INE = await contract.methods.students(1).call();\n    this.setState({\n      INE\n    });\n    const firstName = await contract.methods.students(1).call();\n    this.setState({\n      firstName\n    });\n    const lastName = await contract.methods.students(1).call();\n    this.setState({\n      lastName\n    });\n    const birth = await contract.methods.students(1).call();\n    this.setState({\n      birth\n    });\n    /* const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount}) */\n\n    /* for (var i = 1; i<=studentCount; i++) {\n        const student = await contract.methods.students(i).call().then(console.log)\n        this.setState({student})\n         const idStudent = await contract.methods.idStudent(0).call()\n        this.setState({idStudent})\n        const INE = await contract.methods.student(1).call()\n        const firstName = await contract.methods.student(2).call()\n        const lastName = await contract.methods.student(3).call()\n        const birth = await contract.methods.student(4).call()\n    this.setState({\n        students:[...this.state.students, student]\n    }) */\n\n    return {\n      idStudent: idStudent,\n      INE: INE,\n      firstName: firstName,\n      lastName: lastName,\n      birth: birth\n    };\n  }\n\n  /* createStudent(INE, firstName, lastName, birth) {\n    this.setState({ loading: true })\n    this.state.contract.methods.createStudent(INE, firstName, lastName, birth).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  } */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      padded: true,\n      color: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 23\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, this.state.students.idStudent)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      ssigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, \"idStudent\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, this.state.students.idStudent)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \"INE\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, this.state.students.INE)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, this.state.students.firstName)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, this.state.students.lastName)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, this.state.students.birth)))));\n  }\n\n}\nexport default CreateStudent;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CreateStudent.js"],"names":["React","Component","createContract","Table","Web3","CreateStudent","state","students","name","idStudent","INE","fisrtName","lastName","birth","componentDidMount","loadBcData","currentStudents","getStudents","getDiplomaStorageAddress","setState","web3","givenProvider","network","eth","net","getNetworkType","console","log","props","match","params","address","contract","student","methods","call","then","firstName","render"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\nimport { createContract } from './../ethereum/DiplomaStorageContract'\nimport { Table } from 'semantic-ui-react'\nimport Web3 from 'web3'\n\n\n\nexport class CreateStudent extends Component {\n\n    state = {\n        students: {\n            name:'N/A',\n            idStudent: 0,\n            INE: 0,\n            fisrtName: 'N/A',\n            lastName: 'N/A',\n            birth: 0,\n        }\n\n    }\n\n  async componentDidMount () {\n    this.loadBcData()\n    const currentStudents = await this.getStudents(this.getDiplomaStorageAddress()\n    )\n    this.setState({\n        students: currentStudents\n    })\n  }\n\n  async loadBcData(){\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const network = await web3.eth.net.getNetworkType()\n    console.log(\"network\",network)\n  }\n  \n  getDiplomaStorageAddress () {\n    return this.props.match.params.address\n  }\n\n  async getStudents(address) {\n    const contract = createContract('0x798E41bBadA350Fb878EBDef9A3055cE4d9d2c23')\n    this.setState({ contract })\n    console.log(this.getDiplomaStorageAddress)\n    console.log(contract)\n\n    const student = await contract.methods.students(1).call().then(console.log)\n    this.setState({student}) \n \n    const idStudent =  contract.methods.students(1).call()\n    this.setState({idStudent})\n    const INE = await contract.methods.students(1).call()\n    this.setState({INE})\n    const firstName = await contract.methods.students(1).call()\n    this.setState({firstName})\n    const lastName = await contract.methods.students(1).call()\n    this.setState({lastName})\n    const birth = await contract.methods.students(1).call()\n    this.setState({birth})\n    \n    /* const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount}) */\n\n    /* for (var i = 1; i<=studentCount; i++) {\n        const student = await contract.methods.students(i).call().then(console.log)\n        this.setState({student})\n\n        const idStudent = await contract.methods.idStudent(0).call()\n        this.setState({idStudent})\n        const INE = await contract.methods.student(1).call()\n        const firstName = await contract.methods.student(2).call()\n        const lastName = await contract.methods.student(3).call()\n        const birth = await contract.methods.student(4).call()\n    this.setState({\n        students:[...this.state.students, student]\n    }) */\n    return {\n        idStudent: idStudent,\n        INE: INE,\n        firstName: firstName,\n        lastName: lastName,\n        birth: birth,\n    }\n};\n  \n\n\n  /* createStudent(INE, firstName, lastName, birth) {\n    this.setState({ loading: true })\n    this.state.contract.methods.createStudent(INE, firstName, lastName, birth).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  } */\n\n  render() {\n    return (\n      <div>\n          <Table celled padded color =\"yellow\">\n              <Table.Header>\n                  <Table.Row>\n                      <Table.HeaderCell>Name</Table.HeaderCell>\n                      <Table.HeaderCell>Value</Table.HeaderCell>\n                  </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n\n                  <Table.Row>\n                  <Table.Cell sigleline=\"true\"> \n                     Student\n                  </Table.Cell>\n                  <Table.Cell sigleline=\"true\">\n                      {this.state.students.idStudent}\n                  </Table.Cell>\n                  </Table.Row>\n\n                  <Table.Row>\n                  <Table.Cell ssigleline=\"true\"> \n                     idStudent\n                  </Table.Cell>\n                  <Table.Cell sigleline=\"true\">\n                      {this.state.students.idStudent}\n                  </Table.Cell>\n                  </Table.Row>\n\n                  <Table.Row>\n                  <Table.Cell sigleline=\"true\"> \n                     INE\n                  </Table.Cell>\n                  <Table.Cell sigleline=\"true\">\n                      {this.state.students.INE}\n                  </Table.Cell>\n                  </Table.Row>\n\n                  <Table.Row>\n                  <Table.Cell sigleline=\"true\"> \n                     First Name \n                  </Table.Cell>\n                  <Table.Cell sigleline=\"true\">\n                      {this.state.students.firstName}\n                  </Table.Cell>\n                  </Table.Row>\n\n                  <Table.Row>\n                  <Table.Cell sigleline=\"true\"> \n                     Last Name\n                  </Table.Cell>\n                  <Table.Cell sigleline=\"true\">\n                      {this.state.students.lastName}\n                  </Table.Cell>\n                  </Table.Row>\n\n                  <Table.Row>\n                  <Table.Cell sigleline=\"true\"> \n                     Birthday \n                  </Table.Cell>\n                  <Table.Cell sigleline=\"true\">\n                      {this.state.students.birth}\n                  </Table.Cell>\n                  </Table.Row>\n\n\n              </Table.Body>\n          </Table>\n        \n      </div>\n    );\n  }\n}\n\nexport default CreateStudent;"]},"metadata":{},"sourceType":"module"}