{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CheckSchoolWithId.js\";\nimport React, { Component } from 'react';\nimport { createContract } from '../ethereum/DiplomaStorageContract';\nimport { Table } from 'semantic-ui-react';\nimport Web3 from 'web3';\nimport { web3 } from '../ethereum/web3';\nimport { Button, Header, Form } from 'semantic-ui-react';\nexport class CheckSchoolWithId extends Component {\n  async componentDidMount() {\n    this.loadBcData();\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    console.log(\"contrat\", contract);\n    this.getContractState(contract);\n    await this.getStudent(this.getDiplomaStorageAddress(), this.state.id);\n  }\n\n  async getStudentId(INE, firstName, lastName, birth) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    const id = await contract.methods.checkStudent(INE, firstName, lastName, birth).call();\n    this.setState({\n      id\n    });\n    console.log('id', id);\n    return id;\n  }\n\n  async getContractState(contract) {\n    this.setState({\n      loading: true\n    });\n    const master = contract.methods.master().call();\n    console.log('master');\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount: studentCount\n    });\n    console.log('studentCount GCS', studentCount);\n  }\n\n  async loadBcData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network\", network);\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"account\", accounts[0]);\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(\"addresseContrat\", this.getDiplomaStorageAddress());\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    const studentCount = await this.state.contract.methods.studentCount().call();\n    this.setState({\n      studentCount: studentCount\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      schools: {\n        idSchool: 0,\n        NameSchool: 'N/A',\n        adressSchool: 'N/A',\n        editorSchool: 'N/A'\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      id: 0,\n      account: '',\n      schoolCount: 0,\n      schoolss: []\n    };\n  }\n\n  getDiplomaStorageAddress() {\n    return '0x64399f5759209029856F40854699f65e57ED4225';\n  }\n\n  async getStudent(address, id) {\n    const contract = createContract(address);\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const student = await contract.methods.students(id).call();\n    console.log('student', student);\n    this.setState({\n      students: [student]\n    });\n    console.log(\"student\", this.state.students);\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount\n    });\n  }\n\n  onChange(event) {\n    this.setState({\n      id: event.target.value\n    });\n  }\n\n  async onSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      id: event.target.value\n    });\n    this.getStudent(this.getDiplomaStorageAddress(), parseInt(this.state.id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Id\",\n      type: \"number\",\n      value: this.state.address,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Account : \", this.state.account), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Id : \", this.state.id, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"StudentCount : \", this.state.studentCount), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Contract address: \", this.getDiplomaStorageAddress()), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      padded: true,\n      color: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, student.idStudent);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      ssigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"INE\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, student.INE);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, student.firstName);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, student.lastName);\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, this.state.students.map((student, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }, student.birth);\n    })))))));\n  }\n\n}\nexport default CheckSchoolWithId;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CheckSchoolWithId.js"],"names":["React","Component","createContract","Table","Web3","web3","Button","Header","Form","CheckSchoolWithId","componentDidMount","loadBcData","contract","getDiplomaStorageAddress","setState","console","log","getContractState","getStudent","state","id","getStudentId","INE","firstName","lastName","birth","methods","checkStudent","call","loading","master","studentCount","givenProvider","network","eth","net","getNetworkType","accounts","getAccounts","account","constructor","props","schools","idSchool","NameSchool","adressSchool","editorSchool","onChange","bind","onSubmit","schoolCount","schoolss","address","student","students","event","target","value","preventDefault","parseInt","render","map","key","idStudent"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\nimport { createContract } from '../ethereum/DiplomaStorageContract'\nimport { Table } from 'semantic-ui-react'\nimport Web3 from 'web3'\nimport { web3 } from '../ethereum/web3'\nimport { Button, Header, Form} from 'semantic-ui-react';\n\n\n\n\nexport class CheckSchoolWithId extends Component {\n\n\n    state = {\n        schools: {\n            idSchool: 0,\n            NameSchool: 'N/A',\n            adressSchool: 'N/A',\n            editorSchool: 'N/A',\n        }\n\n    }\n\n  async componentDidMount () {\n    this.loadBcData()\n    const contract = createContract(this.getDiplomaStorageAddress())\n    this.setState({contract})\n    console.log(\"contrat\",contract)\n    this.getContractState(contract)\n    await this.getStudent(this.getDiplomaStorageAddress(),this.state.id)\n  }\n\n  async getStudentId(INE,firstName,lastName,birth){\n    const contract = createContract(this.getDiplomaStorageAddress())\n    const id = await contract.methods.checkStudent(INE,firstName,lastName,birth).call()\n    this.setState({id})\n    console.log('id',id)\n    return(id)\n  }\n\n  async getContractState(contract){\n    this.setState({loading:true})\n    const master = contract.methods.master().call()\n    console.log('master')\n    const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount: studentCount})\n    console.log('studentCount GCS',studentCount)\n  }\n\n  async loadBcData(){\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const network = await web3.eth.net.getNetworkType()\n    console.log(\"network\",network)\n    const accounts = await web3.eth.getAccounts()\n    console.log(\"account\", accounts[0])\n    this.setState({account: accounts[0]})\n    console.log(\"addresseContrat\",this.getDiplomaStorageAddress())\n\n    const contract = createContract(this.getDiplomaStorageAddress())\n    this.setState({contract})\n    const studentCount = await this.state.contract.methods.studentCount().call()\n    this.setState({studentCount: studentCount})\n  }\n \n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      id : 0,\n      account: '',\n      schoolCount: 0,\n      schoolss: [],\n\n      \n    }\n  }\n  \n  \n  getDiplomaStorageAddress () {\n    return '0x64399f5759209029856F40854699f65e57ED4225'\n  }\n\n  async getStudent(address,id) {\n    const contract = createContract(address)\n    \n    this.setState({ contract })\n    console.log(contract)\n\n    const student = await contract.methods.students(id).call()\n    console.log('student',student)\n    this.setState({\n        students: [student]\n    })\n    console.log(\"student\", this.state.students)\n\n    const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount})\n  }\n\n  \n\n\n\n  onChange(event) {\n    this.setState({id: event.target.value});\n}\n\n    async onSubmit(event) {\n    event.preventDefault();\n    this.setState({id: event.target.value});\n    this.getStudent(this.getDiplomaStorageAddress(),parseInt(this.state.id))\n\n    \n}\n\n  render() {\n    return (\n\n      \n      \n        <div>\n\n                  <Form>\n                    <Form.Input\n                        label='Id'\n                        type='number'\n                        value={this.state.address}\n                        onChange={this.onChange}\n                    />\n                    <Button\n                        type='submit'\n                        onClick={this.onSubmit}\n                    >\n                        Submit\n                    </Button>\n                </Form>\n\n\n          <p>Account : {this.state.account}</p>\n\n          <p>Id : {this.state.id} </p>\n\n          <p>StudentCount : {this.state.studentCount}</p>\n\n          <p>Contract address: {this.getDiplomaStorageAddress()}</p>\n\n            <Table celled padded color =\"yellow\">\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Value</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n  \n                <Table.Body>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       Student\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n              \n                <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.idStudent}\n                  \n                \n                </div>\n              )\n            })}\n          </ul>\n                   \n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell ssigleline=\"true\"> \n                       INE\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.INE}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       First Name \n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.firstName}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       Last Name\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.lastName}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n                    <Table.Row>\n                    <Table.Cell sigleline=\"true\"> \n                       Birthday\n                    </Table.Cell>\n                    <Table.Cell sigleline=\"true\">\n  \n  \n                    <ul id=\"taskList\" className=\"list-unstyled\">\n                  { this.state.students.map((student, key) => {\n              return(\n                <div className=\"taskTemplate\"  key={key}>\n                  \n                    \n                  {student.birth}\n                 \n                \n                </div>\n              )\n            })}\n          </ul>\n\n  \n  \n  \n                    </Table.Cell>\n                    </Table.Row>\n  \n  \n                </Table.Body>\n            </Table>\n          \n        </div>\n    );\n  }\n}\n\nexport default CheckSchoolWithId;"]},"metadata":{},"sourceType":"module"}