{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CheckDiplomaRudy.js\";\nimport React, { Component } from 'react';\nimport { createContract } from '../ethereum/DiplomaStorageContract';\nimport { Table, Button } from 'semantic-ui-react';\nimport { web3 } from '../ethereum/web3';\nexport class CheckDiplomaRudy extends Component {\n  async componentDidMount() {\n    await this.getDiplomas(this.getDiplomaStorageAddress());\n  }\n\n  getDiplomaStorageAddress() {\n    return this.props.match.params.address;\n  }\n\n  async getDiplomas(address) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(accounts);\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const diplomaCount = await contract.methods.diplomaCount().call();\n    this.setState({\n      diplomaCount\n    });\n    const studentCount = await contract.methods.studentCount().call();\n    this.setState({\n      studentCount\n    });\n    const degreeCount = await contract.methods.degreeCount().call();\n    this.setState({\n      degreeCount\n    });\n    const schoolCount = await contract.methods.schoolCount().call();\n    this.setState([schoolCount]);\n\n    for (var i = 1; i <= studentCount; i++) {\n      const student = await contract.methods.students(i).call();\n      this.setState({\n        students: [...this.state.students, student]\n      });\n    }\n\n    for (var j = 1; j <= diplomaCount; j++) {\n      const diploma = await contract.methods.diplomas(j).call();\n      this.setState({\n        diplomas: [...this.state.diplomas, diploma]\n      });\n    }\n\n    for (var k = 1; k <= schoolCount; k++) {\n      const school = await contract.methods.schools(k).call();\n      this.setState({\n        schools: [...this.state.schools, school]\n      });\n    }\n\n    for (var l = 1; l <= degreeCount; l++) {\n      const degree = await contract.methods.degrees(l).call();\n      this.setState({\n        degrees: [...this.state.degrees, degree]\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      diplomas: {\n        idStudent: 0,\n        idDegree: 0\n      },\n      students: {\n        name: 'N/A',\n        idStudent: 0,\n        INE: 0,\n        fisrtName: 'N/A',\n        lastName: 'N/A',\n        birth: 0\n      },\n      degrees: {\n        idDegree: 0,\n        idSchool: 0,\n        year: 0,\n        nameDegree: 'N/A',\n        schoolName: 'N/A'\n      },\n      schools: {\n        schoolAddress: 'N/A',\n        idSchool: 0,\n        schoolName: 'N/A'\n      },\n      diplomaResult: false\n    };\n    this.state = {\n      account: '',\n      diplomaCount: 0,\n      studentCount: 0,\n      degreeCount: 0,\n      schoolCount: 0,\n      students: [],\n      schools: [],\n      degrees: [],\n      diplomas: [],\n      diplomaResult: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async checkDiploma(INE, firstName, lastName, birth, dYear, nameDegree, schoolName) {\n    const contract = createContract(this.getDiplomaStorageAddress());\n    this.setState({\n      contract\n    });\n    console.log(contract);\n    const diplomaResult = await contract.methods.checkDiploma(INE, firstName, lastName, birth, dYear, nameDegree, schoolName).call();\n    console.log('Diplomaaaa Result: ', diplomaResult);\n    this.setState({\n      diplomaResult\n    });\n  }\n\n  onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    console.log(name, value, this.state);\n    this.setState({\n      [name]: value\n    });\n    console.log(name, value, this.state);\n  }\n\n  async onSubmit(event) {\n    event.preventDefault(); //const contract = createContract(this.getDiplomaStorageAddress())\n\n    const diplomaResult = await this.checkDiploma(this.state.INE, this.state.firstName, this.state.lastName, this.state.birth, this.state.dYear, this.state.nameDegree, this.state.schoolName);\n    console.log('Diplomaaaavdkvnsdvn Result: ', diplomaResult);\n    this.setState(diplomaResult);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"INE (let empty if you dont know it):\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"inputs\", {\n      placeholder: \"Enter the INE number\",\n      name: \"INE\",\n      type: \"number\" //value={this.state.INE}\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, \"firstName :\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter the First Name\",\n      name: \"firstName\",\n      type: \"text\" //value={this.state.firstName}\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, \"lastName :\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter the Last Name\",\n      name: \"lastName\",\n      type: \"text\" //value={this.state.lastName}\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, \"Birth :\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter the Birthday\",\n      name: \"birth\",\n      type: \"number\" //value={this.state.birth}\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, \"Degree Year :\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter the Degree Year\",\n      name: \"dYear\",\n      type: \"text\" //value={this.state.degreeYear}\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, \"Name Degree :\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter the Degree Name\",\n      name: \"nameDegree\",\n      type: \"text\" //value={this.state.degreeName}\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, \"Name of the School :\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter the Name School\",\n      name: \"schoolName\",\n      type: \"text\" //value={this.state.schoolName}\n      ,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, \"Check Diploma\")), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      padded: true,\n      color: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, \"INE\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, \"Year Degree\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 23\n      }\n    }, \"Name Degree\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }\n    }, \"School Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }, \"Got Diploma?\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, this.state.INE), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, this.state.firstName), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 18\n      }\n    }, this.state.lastName), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, this.state.birth), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, this.state.dYear), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }, this.state.nameDegree), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, this.state.schoolName), /*#__PURE__*/React.createElement(Table.Cell, {\n      sigleline: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    }, this.state.diplomaResult)))));\n  }\n\n}\nexport default CheckDiplomaRudy;","map":{"version":3,"sources":["/home/ubuntu/Documents/BC_Projects/OPPO-DS/src/components/CheckDiplomaRudy.js"],"names":["React","Component","createContract","Table","Button","web3","CheckDiplomaRudy","componentDidMount","getDiplomas","getDiplomaStorageAddress","props","match","params","address","contract","accounts","eth","getAccounts","setState","account","console","log","diplomaCount","methods","call","studentCount","degreeCount","schoolCount","i","student","students","state","j","diploma","diplomas","k","school","schools","l","degree","degrees","constructor","idStudent","idDegree","name","INE","fisrtName","lastName","birth","idSchool","year","nameDegree","schoolName","schoolAddress","diplomaResult","onChange","bind","onSubmit","checkDiploma","firstName","dYear","event","target","value","preventDefault","render"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAKA,OAAO,MAAMC,gBAAN,SAA+BL,SAA/B,CAAyC;AAoC9C,QAAMM,iBAAN,GAA2B;AACzB,UAAM,KAAKC,WAAL,CAAiB,KAAKC,wBAAL,EAAjB,CAAN;AAED;;AAEDA,EAAAA,wBAAwB,GAAI;AAC1B,WAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA/B;AACD;;AAED,QAAML,WAAN,CAAkBK,OAAlB,EAA2B;AACzB,UAAMC,QAAQ,GAAGZ,cAAc,CAAC,KAAKO,wBAAL,EAAD,CAA/B;AACA,UAAMM,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAnB,KAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,SAAKG,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEA,UAAMQ,YAAY,GAAG,MAAMR,QAAQ,CAACS,OAAT,CAAiBD,YAAjB,GAAgCE,IAAhC,EAA3B;AACA,SAAKN,QAAL,CAAc;AAACI,MAAAA;AAAD,KAAd;AAEA,UAAMG,YAAY,GAAG,MAAMX,QAAQ,CAACS,OAAT,CAAiBE,YAAjB,GAAgCD,IAAhC,EAA3B;AACA,SAAKN,QAAL,CAAc;AAACO,MAAAA;AAAD,KAAd;AAEA,UAAMC,WAAW,GAAG,MAAMZ,QAAQ,CAACS,OAAT,CAAiBG,WAAjB,GAA+BF,IAA/B,EAA1B;AACA,SAAKN,QAAL,CAAc;AAACQ,MAAAA;AAAD,KAAd;AAEA,UAAMC,WAAW,GAAG,MAAMb,QAAQ,CAACS,OAAT,CAAiBI,WAAjB,GAA+BH,IAA/B,EAA1B;AACA,SAAKN,QAAL,CAAc,CAACS,WAAD,CAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,YAArB,EAAmCG,CAAC,EAApC,EAAwC;AACpC,YAAMC,OAAO,GAAG,MAAMf,QAAQ,CAACS,OAAT,CAAiBO,QAAjB,CAA0BF,CAA1B,EAA6BJ,IAA7B,EAAtB;AACA,WAAKN,QAAL,CAAc;AACZY,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,QAAf,EAAyBD,OAAzB;AADE,OAAd;AAGD;;AAGH,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,YAArB,EAAmCU,CAAC,EAApC,EAAwC;AACpC,YAAMC,OAAO,GAAG,MAAMnB,QAAQ,CAACS,OAAT,CAAiBW,QAAjB,CAA0BF,CAA1B,EAA6BR,IAA7B,EAAtB;AACA,WAAKN,QAAL,CAAc;AACZgB,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,QAAf,EAAyBD,OAAzB;AADE,OAAd;AAGD;;AAGD,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,WAArB,EAAkCQ,CAAC,EAAnC,EAAuC;AACrC,YAAMC,MAAM,GAAG,MAAMtB,QAAQ,CAACS,OAAT,CAAiBc,OAAjB,CAAyBF,CAAzB,EAA4BX,IAA5B,EAArB;AACA,WAAKN,QAAL,CAAc;AACZmB,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKN,KAAL,CAAWM,OAAf,EAAwBD,MAAxB;AADG,OAAd;AAGD;;AAED,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIZ,WAArB,EAAkCY,CAAC,EAAnC,EAAuC;AACrC,YAAMC,MAAM,GAAG,MAAMzB,QAAQ,CAACS,OAAT,CAAiBiB,OAAjB,CAAyBF,CAAzB,EAA4Bd,IAA5B,EAArB;AACA,WAAKN,QAAL,CAAc;AACZsB,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKT,KAAL,CAAWS,OAAf,EAAwBD,MAAxB;AADG,OAAd;AAGD;AACN;;AAEDE,EAAAA,WAAW,CAAC/B,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SA/FfqB,KA+Fe,GA/FP;AACJG,MAAAA,QAAQ,EAAE;AACNQ,QAAAA,SAAS,EAAE,CADL;AAENC,QAAAA,QAAQ,EAAE;AAFJ,OADN;AAMJb,MAAAA,QAAQ,EAAE;AACNc,QAAAA,IAAI,EAAC,KADC;AAENF,QAAAA,SAAS,EAAE,CAFL;AAGNG,QAAAA,GAAG,EAAE,CAHC;AAINC,QAAAA,SAAS,EAAE,KAJL;AAKNC,QAAAA,QAAQ,EAAE,KALJ;AAMNC,QAAAA,KAAK,EAAE;AAND,OANN;AAeJR,MAAAA,OAAO,EAAE;AACLG,QAAAA,QAAQ,EAAE,CADL;AAELM,QAAAA,QAAQ,EAAE,CAFL;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,UAAU,EAAE,KAJP;AAKLC,QAAAA,UAAU,EAAE;AALP,OAfL;AAuBJf,MAAAA,OAAO,EAAE;AACLgB,QAAAA,aAAa,EAAE,KADV;AAELJ,QAAAA,QAAQ,EAAE,CAFL;AAGLG,QAAAA,UAAU,EAAE;AAHP,OAvBL;AA6BJE,MAAAA,aAAa,EAAE;AA7BX,KA+FO;AAEf,SAAKvB,KAAL,GAAa;AACXZ,MAAAA,OAAO,EAAC,EADG;AAEXG,MAAAA,YAAY,EAAE,CAFH;AAGXG,MAAAA,YAAY,EAAE,CAHH;AAIXC,MAAAA,WAAW,EAAE,CAJF;AAKXC,MAAAA,WAAW,EAAC,CALD;AAMXG,MAAAA,QAAQ,EAAE,EANC;AAOXO,MAAAA,OAAO,EAAE,EAPE;AAQXG,MAAAA,OAAO,EAAE,EARE;AASXN,MAAAA,QAAQ,EAAE,EATC;AAUXoB,MAAAA,aAAa,EAAE;AAVJ,KAAb;AAYA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAGG,QAAME,YAAN,CAAmBb,GAAnB,EAAwBc,SAAxB,EAAmCZ,QAAnC,EAA6CC,KAA7C,EAAoDY,KAApD,EAA2DT,UAA3D,EAAuEC,UAAvE,EAAmF;AACnF,UAAMtC,QAAQ,GAAGZ,cAAc,CAAC,KAAKO,wBAAL,EAAD,CAA/B;AAEA,SAAKS,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAGA,UAAMwC,aAAa,GAAG,MAAMxC,QAAQ,CAACS,OAAT,CAAiBmC,YAAjB,CAA8Bb,GAA9B,EAAmCc,SAAnC,EAA8CZ,QAA9C,EAAwDC,KAAxD,EAA+DY,KAA/D,EAAsET,UAAtE,EAAkFC,UAAlF,EAA8F5B,IAA9F,EAA5B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCiC,aAAnC;AACA,SAAKpC,QAAL,CAAc;AAACoC,MAAAA;AAAD,KAAd;AAEH;;AAGGC,EAAAA,QAAQ,CAACM,KAAD,EAAQ;AAEhB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAID,MAAM,CAACC,KAAtB;AACA,UAAMnB,IAAI,GAAGkB,MAAM,CAAClB,IAApB;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAZ,EAAiBmB,KAAjB,EAAuB,KAAKhC,KAA5B;AACA,SAAKb,QAAL,CAAc;AACZ,OAAC0B,IAAD,GAAQmB;AADI,KAAd;AAGA3C,IAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAZ,EAAiBmB,KAAjB,EAAuB,KAAKhC,KAA5B;AACH;;AAGG,QAAM0B,QAAN,CAAeI,KAAf,EAAsB;AACtBA,IAAAA,KAAK,CAACG,cAAN,GADsB,CAEtB;;AAEA,UAAMV,aAAa,GAAI,MAAM,KAAKI,YAAL,CAAkB,KAAK3B,KAAL,CAAWc,GAA7B,EAAkC,KAAKd,KAAL,CAAW4B,SAA7C,EAAwD,KAAK5B,KAAL,CAAWgB,QAAnE,EAA6E,KAAKhB,KAAL,CAAWiB,KAAxF,EAA+F,KAAKjB,KAAL,CAAW6B,KAA1G,EAAiH,KAAK7B,KAAL,CAAWoB,UAA5H,EAAwI,KAAKpB,KAAL,CAAWqB,UAAnJ,CAA7B;AACAhC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CiC,aAA5C;AACA,SAAKpC,QAAL,CAAcoC,aAAd;AAEH;;AAGCW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,WAAW,EAAE,sBADf;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,IAAI,EAAC,QAHP,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKV,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADE,eAWF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXE,eAYF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,WAAW,EAAC,sBADd;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,IAAI,EAAC,MAHP,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKA,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAZE,eAsBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBE,eAuBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,WAAW,EAAC,qBADd;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,MAHP,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKA,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAvBE,eAiCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCE,eAkCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,WAAW,EAAC,oBADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,QAHP,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKA,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAlCE,eA4CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CE,eA6CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,WAAW,EAAC,uBADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,MAHP,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKA,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CA7CE,eAuDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDE,eAwDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,WAAW,EAAC,uBADd;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,IAAI,EAAC,MAHP,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKA,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAxDE,eAkEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlEE,eAmEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,WAAW,EAAC,uBADd;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,IAAI,EAAC,MAHP,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKA,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAnEE,eA6EF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7EE,eAiFE,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAE,KAAKE,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjFF,CAFJ,eA6FI,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAc,MAAA,MAAM,MAApB;AAAqB,MAAA,KAAK,EAAE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,eAMI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,eAOI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPJ,eAQI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,CADJ,CADJ,eAcI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEN,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAK1B,KAAL,CAAWc,GAFhB,CAFM,eAmBF,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKd,KAAL,CAAW4B,SAFhB,CAnBE,eAqCD,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAK5B,KAAL,CAAWgB,QAFhB,CArCC,eAsDF,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKhB,KAAL,CAAWiB,KAFhB,CAtDE,eAwEF,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKjB,KAAL,CAAW6B,KAFhB,CAxEE,eA0FF,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAK7B,KAAL,CAAWoB,UAFhB,CA1FE,eA4GF,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKpB,KAAL,CAAWqB,UAFhB,CA5GE,eA8HF,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKrB,KAAL,CAAWuB,aAFhB,CA9HE,CAFJ,CAdJ,CA7FJ,CADF;AAoQD;;AA/Z6C;AAkahD,eAAehD,gBAAf","sourcesContent":["\n \nimport React, { Component }  from 'react'\nimport { createContract } from '../ethereum/DiplomaStorageContract'\nimport { Table, Button } from 'semantic-ui-react'\nimport { web3 } from '../ethereum/web3'\n\n\n\n\nexport class CheckDiplomaRudy extends Component {\n\n    state = {\n        diplomas: {\n            idStudent: 0,\n            idDegree: 0,\n        },\n\n        students: {\n            name:'N/A',\n            idStudent: 0,\n            INE: 0,\n            fisrtName: 'N/A',\n            lastName: 'N/A',\n            birth: 0,\n        }, \n\n        degrees: {\n            idDegree: 0,\n            idSchool: 0,\n            year: 0,\n            nameDegree: 'N/A',\n            schoolName: 'N/A', \n        },\n\n        schools: {\n            schoolAddress: 'N/A',\n            idSchool: 0,\n            schoolName: 'N/A',\n        },\n\n        diplomaResult: false,\n\n    }\n\n\n  async componentDidMount () {\n    await this.getDiplomas(this.getDiplomaStorageAddress()\n    )\n  }\n  \n  getDiplomaStorageAddress () {\n    return this.props.match.params.address\n  }\n\n  async getDiplomas(address) {\n    const contract = createContract(this.getDiplomaStorageAddress())\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    console.log(accounts)\n    \n    this.setState({ contract })\n    console.log(contract)\n\n    const diplomaCount = await contract.methods.diplomaCount().call()\n    this.setState({diplomaCount})\n\n    const studentCount = await contract.methods.studentCount().call()\n    this.setState({studentCount})\n\n    const degreeCount = await contract.methods.degreeCount().call()\n    this.setState({degreeCount})\n    \n    const schoolCount = await contract.methods.schoolCount().call()\n    this.setState([schoolCount])\n\n    for (var i = 1; i <= studentCount; i++) {\n        const student = await contract.methods.students(i).call()\n        this.setState({\n          students: [...this.state.students, student]\n        })\n      }\n\n\n    for (var j = 1; j <= diplomaCount; j++) {\n        const diploma = await contract.methods.diplomas(j).call()\n        this.setState({\n          diplomas: [...this.state.diplomas, diploma]\n        })\n      }\n\n\n      for (var k = 1; k <= schoolCount; k++) {\n        const school = await contract.methods.schools(k).call()\n        this.setState({\n          schools: [...this.state.schools, school]\n        })\n      }\n\n      for (var l = 1; l <= degreeCount; l++) {\n        const degree = await contract.methods.degrees(l).call()\n        this.setState({\n          degrees: [...this.state.degrees, degree]\n        })\n      }\n}\n\nconstructor(props) {\n    super(props)\n    this.state = {\n      account:'',\n      diplomaCount: 0,\n      studentCount: 0,\n      degreeCount: 0,\n      schoolCount:0,\n      students: [],\n      schools: [],\n      degrees: [],\n      diplomas: [],\n      diplomaResult: false,\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n}\n\n\n    async checkDiploma(INE, firstName, lastName, birth, dYear, nameDegree, schoolName) {\n    const contract = createContract(this.getDiplomaStorageAddress())\n\n    this.setState({ contract })\n    console.log(contract)\n    \n    \n    const diplomaResult = await contract.methods.checkDiploma(INE, firstName, lastName, birth, dYear, nameDegree, schoolName).call()\n    console.log('Diplomaaaa Result: ', diplomaResult)\n    this.setState({diplomaResult})\n    \n}\n\n\n    onChange(event) {\n    \n    const target = event.target;\n    const value =  target.value;\n    const name = target.name;\n    console.log(name,value,this.state) \n    this.setState({\n      [name]: value\n    });\n    console.log(name,value,this.state)  \n}\n\n\n    async onSubmit(event) {\n    event.preventDefault();\n    //const contract = createContract(this.getDiplomaStorageAddress())\n\n    const diplomaResult =  await this.checkDiploma(this.state.INE, this.state.firstName, this.state.lastName, this.state.birth, this.state.dYear, this.state.nameDegree, this.state.schoolName)\n    console.log('Diplomaaaavdkvnsdvn Result: ', diplomaResult)\n    this.setState(diplomaResult)\n    \n}\n\n\n  render() {\n    return (\n      <div>\n          \n          <form>\n        <label>\n          INE (let empty if you dont know it):\n          <br />\n          <inputs\n            placeholder= 'Enter the INE number'\n            name=\"INE\"\n            type=\"number\"\n            //value={this.state.INE}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          firstName :\n          <br />\n          <input\n            placeholder='Enter the First Name'\n            name=\"firstName\"\n            type=\"text\"\n            //value={this.state.firstName}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          lastName :\n          <br />\n          <input\n            placeholder='Enter the Last Name'\n            name=\"lastName\"\n            type=\"text\"\n            //value={this.state.lastName}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          Birth :\n          <br />\n          <input\n            placeholder='Enter the Birthday'\n            name=\"birth\"\n            type=\"number\"\n            //value={this.state.birth}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          Degree Year :\n          <br />\n          <input\n            placeholder='Enter the Degree Year'\n            name=\"dYear\"\n            type=\"text\"\n            //value={this.state.degreeYear}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          Name Degree :\n          <br />\n          <input\n            placeholder='Enter the Degree Name'\n            name=\"nameDegree\"\n            type=\"text\"\n            //value={this.state.degreeName}\n            onChange={this.onChange} />\n        </label>\n        <br />\n        <label>\n          Name of the School :\n          <br />\n          <input\n            placeholder='Enter the Name School'\n            name=\"schoolName\"\n            type=\"text\"\n            //value={this.state.schoolName}\n            onChange={this.onChange} />\n        </label>\n        <br />\n      \n\n\n            <Button\n                type='submit'\n                onClick={this.onSubmit}\n                >\n                    Check Diploma\n            </Button>\n          </form>\n\n\n            \n          <Table celled padded color =\"yellow\">\n              <Table.Header>\n                  <Table.Row>\n                      <Table.HeaderCell>INE</Table.HeaderCell>\n                      <Table.HeaderCell>First Name</Table.HeaderCell>\n                      <Table.HeaderCell>Last Name</Table.HeaderCell>\n                      <Table.HeaderCell>Birthday</Table.HeaderCell>\n                      <Table.HeaderCell>Year Degree</Table.HeaderCell>\n                      <Table.HeaderCell>Name Degree</Table.HeaderCell>\n                      <Table.HeaderCell>School Name</Table.HeaderCell>\n                      <Table.HeaderCell>Got Diploma?</Table.HeaderCell>\n                  </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n\n                  <Table.Row>\n            \n            <Table.Cell sigleline=\"true\">\n\n                {this.state.INE}\n\n            {/* ul id=\"taskList\" className=\"list-unstyled\">\n                { this.state.students.map((student, key) => {\n                    return(\n                         <div className=\"taskTemplate\"  key={key}>\n                        {student.INE}\n                        \n                        </div>\n                        )\n                    })}\n                </ul> */}\n\n                </Table.Cell>\n                 \n                <Table.Cell>\n\n                    {this.state.firstName}\n\n                {/* <ul id=\"taskList\" className=\"list-unstyled\">\n                    { this.state.students.map((student, key) => {\n                         return(\n                          <div className=\"taskTemplate\"  key={key}>\n             \n                            {student.firstName}\n        \n                            </div>\n                        )\n                    })}\n                </ul> */}\n\n                </Table.Cell>\n                  \n                 <Table.Cell sigleline=\"true\">\n\n                     {this.state.lastName}\n\n             {/*    <ul id=\"taskList\" className=\"list-unstyled\">\n                    { this.state.students.map((student, key) => {\n                        return(\n                         <div className=\"taskTemplate\"  key={key}>\n                \n                        {student.lastName}\n                        </div>\n                        )\n                     })}\n                </ul> */}\n\n                </Table.Cell>\n                  \n                <Table.Cell sigleline=\"true\">\n\n                    {this.state.birth}\n\n                {/* <ul id=\"taskList\" className=\"list-unstyled\">\n                    { this.state.students.map((student, key) => {\n                        return(\n                        <div className=\"taskTemplate\"  key={key}>\n                \n                        {student.birth}\n               \n                        </div>\n                        )\n                    })}\n                </ul> */}\n\n                </Table.Cell>\n\n                <Table.Cell sigleline=\"true\">\n\n                    {this.state.dYear}\n\n               {/*  <ul id=\"taskList\" className=\"list-unstyled\">\n                    { this.state.degrees.map((degree, key) => {\n                        return(\n                        <div className=\"taskTemplate\"  key={key}>\n                \n                        {degree.year}\n               \n                        </div>\n                        )\n                    })}\n                </ul> */}\n\n                </Table.Cell>\n\n                <Table.Cell sigleline=\"true\">\n\n                    {this.state.nameDegree}\n\n               {/*  <ul id=\"taskList\" className=\"list-unstyled\">\n                    { this.state.degrees.map((degree, key) => {\n                        return(\n                        <div className=\"taskTemplate\"  key={key}>\n                \n                        {degree.nameDegree}\n               \n                        </div>\n                        )\n                    })}\n                </ul> */}\n\n                </Table.Cell>\n\n                <Table.Cell sigleline=\"true\">\n\n                    {this.state.schoolName}\n\n                {/* <ul id=\"taskList\" className=\"list-unstyled\">\n                    { this.state.schools.map((school, key) => {\n                        return(\n                        <div className=\"taskTemplate\"  key={key}>\n                \n                        {school.schoolName}\n               \n                        </div>\n                        )\n                    })}\n                </ul>\n */}\n                </Table.Cell>\n\n                <Table.Cell sigleline=\"true\">\n\n                    {this.state.diplomaResult}\n\n\n                {/* {  this.state.diplomas.map((diplomaResult, key) => {\n                    return(\n                         <div className=\"taskTemplate\"  key={key}>\n                        {diplomaResult.idStudent}\n                        \n                        </div>\n                        )\n                    })}  */}\n               \n\n                </Table.Cell>\n                </Table.Row>\n\n\n              </Table.Body>\n          </Table>\n        \n      </div>\n    );\n  }\n}\n\nexport default CheckDiplomaRudy;\n"]},"metadata":{},"sourceType":"module"}